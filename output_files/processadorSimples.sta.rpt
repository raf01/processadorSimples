TimeQuest Timing Analyzer report for processadorSimples
Tue Nov 22 17:28:31 2016
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1.78 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'KEY[0]'
 12. Slow Model Hold: 'KEY[0]'
 13. Slow Model Minimum Pulse Width: 'KEY[0]'
 14. Slow Model Minimum Pulse Width: 'CLOCK_50'
 15. Setup Times
 16. Hold Times
 17. Clock to Output Times
 18. Minimum Clock to Output Times
 19. Fast Model Setup Summary
 20. Fast Model Hold Summary
 21. Fast Model Recovery Summary
 22. Fast Model Removal Summary
 23. Fast Model Minimum Pulse Width Summary
 24. Fast Model Setup: 'KEY[0]'
 25. Fast Model Hold: 'KEY[0]'
 26. Fast Model Minimum Pulse Width: 'KEY[0]'
 27. Fast Model Minimum Pulse Width: 'CLOCK_50'
 28. Setup Times
 29. Hold Times
 30. Clock to Output Times
 31. Minimum Clock to Output Times
 32. Multicorner Timing Analysis Summary
 33. Setup Times
 34. Hold Times
 35. Clock to Output Times
 36. Minimum Clock to Output Times
 37. Setup Transfers
 38. Hold Transfers
 39. Report TCCS
 40. Report RSKM
 41. Unconstrained Paths
 42. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-------------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                         ;
+--------------------+----------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1.78 SJ Web Edition ;
; Revision Name      ; processadorSimples                                                   ;
; Device Family      ; Cyclone II                                                           ;
; Device Name        ; EP2C20F484C7                                                         ;
; Timing Models      ; Final                                                                ;
; Delay Model        ; Combined                                                             ;
; Rise/Fall Delays   ; Unavailable                                                          ;
+--------------------+----------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 8      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                               ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+--------------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets      ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+--------------+
; CLOCK_50   ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { CLOCK_50 } ;
; KEY[0]     ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { KEY[0] }   ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+--------------+


+-------------------------------------------------+
; Slow Model Fmax Summary                         ;
+-----------+-----------------+------------+------+
; Fmax      ; Restricted Fmax ; Clock Name ; Note ;
+-----------+-----------------+------------+------+
; 59.83 MHz ; 59.83 MHz       ; KEY[0]     ;      ;
+-----------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+----------------------------------+
; Slow Model Setup Summary         ;
+--------+---------+---------------+
; Clock  ; Slack   ; End Point TNS ;
+--------+---------+---------------+
; KEY[0] ; -15.713 ; -190.303      ;
+--------+---------+---------------+


+--------------------------------+
; Slow Model Hold Summary        ;
+--------+-------+---------------+
; Clock  ; Slack ; End Point TNS ;
+--------+-------+---------------+
; KEY[0] ; 0.445 ; 0.000         ;
+--------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+----------+--------+--------------------+
; Clock    ; Slack  ; End Point TNS      ;
+----------+--------+--------------------+
; KEY[0]   ; -1.807 ; -108.173           ;
; CLOCK_50 ; -1.631 ; -11.407            ;
+----------+--------+--------------------+


+------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'KEY[0]'                                                                                                         ;
+---------+------------------------------+---------------------+--------------+-------------+--------------+------------+------------+
; Slack   ; From Node                    ; To Node             ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+---------+------------------------------+---------------------+--------------+-------------+--------------+------------+------------+
; -15.713 ; MUX:mux|out1[3]~_Duplicate_1 ; ULA:ula|saidaULA[0] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.655      ; 17.406     ;
; -15.646 ; MUX:mux|out0[6]~_Duplicate_1 ; ULA:ula|saidaULA[0] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.631      ; 17.315     ;
; -15.643 ; MUX:mux|out1[2]~_Duplicate_1 ; ULA:ula|saidaULA[0] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.631      ; 17.312     ;
; -15.634 ; MUX:mux|out1[0]~_Duplicate_1 ; ULA:ula|saidaULA[0] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.655      ; 17.327     ;
; -15.549 ; MUX:mux|out0[7]~_Duplicate_1 ; ULA:ula|saidaULA[0] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.631      ; 17.218     ;
; -15.530 ; MUX:mux|out1[1]~_Duplicate_1 ; ULA:ula|saidaULA[0] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.631      ; 17.199     ;
; -15.528 ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[0] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.354      ; 16.920     ;
; -15.498 ; MUX:mux|out1[4]~_Duplicate_1 ; ULA:ula|saidaULA[0] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.354      ; 16.890     ;
; -15.220 ; MUX:mux|out1[7]~_Duplicate_1 ; ULA:ula|saidaULA[0] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.354      ; 16.612     ;
; -15.027 ; MUX:mux|out1[6]~_Duplicate_1 ; ULA:ula|saidaULA[0] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.354      ; 16.419     ;
; -14.214 ; MUX:mux|out1[3]~_Duplicate_1 ; ULA:ula|saidaULA[1] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.656      ; 15.908     ;
; -14.147 ; MUX:mux|out0[6]~_Duplicate_1 ; ULA:ula|saidaULA[1] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.632      ; 15.817     ;
; -14.144 ; MUX:mux|out1[2]~_Duplicate_1 ; ULA:ula|saidaULA[1] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.632      ; 15.814     ;
; -14.135 ; MUX:mux|out1[0]~_Duplicate_1 ; ULA:ula|saidaULA[1] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.656      ; 15.829     ;
; -14.127 ; MUX:mux|out0[5]~_Duplicate_1 ; ULA:ula|saidaULA[0] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.631      ; 15.796     ;
; -14.050 ; MUX:mux|out0[7]~_Duplicate_1 ; ULA:ula|saidaULA[1] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.632      ; 15.720     ;
; -14.031 ; MUX:mux|out1[1]~_Duplicate_1 ; ULA:ula|saidaULA[1] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.632      ; 15.701     ;
; -14.029 ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[1] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.355      ; 15.422     ;
; -13.999 ; MUX:mux|out1[4]~_Duplicate_1 ; ULA:ula|saidaULA[1] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.355      ; 15.392     ;
; -13.721 ; MUX:mux|out1[7]~_Duplicate_1 ; ULA:ula|saidaULA[1] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.355      ; 15.114     ;
; -13.528 ; MUX:mux|out1[6]~_Duplicate_1 ; ULA:ula|saidaULA[1] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.355      ; 14.921     ;
; -12.628 ; MUX:mux|out0[5]~_Duplicate_1 ; ULA:ula|saidaULA[1] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.632      ; 14.298     ;
; -12.167 ; MUX:mux|out0[4]~_Duplicate_1 ; ULA:ula|saidaULA[0] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.631      ; 13.836     ;
; -11.965 ; MUX:mux|out1[3]~_Duplicate_1 ; ULA:ula|saidaULA[2] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.770      ; 13.773     ;
; -11.898 ; MUX:mux|out0[6]~_Duplicate_1 ; ULA:ula|saidaULA[2] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.746      ; 13.682     ;
; -11.895 ; MUX:mux|out1[2]~_Duplicate_1 ; ULA:ula|saidaULA[2] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.746      ; 13.679     ;
; -11.886 ; MUX:mux|out1[0]~_Duplicate_1 ; ULA:ula|saidaULA[2] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.770      ; 13.694     ;
; -11.801 ; MUX:mux|out0[7]~_Duplicate_1 ; ULA:ula|saidaULA[2] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.746      ; 13.585     ;
; -11.782 ; MUX:mux|out1[1]~_Duplicate_1 ; ULA:ula|saidaULA[2] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.746      ; 13.566     ;
; -11.780 ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[2] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.469      ; 13.287     ;
; -11.750 ; MUX:mux|out1[4]~_Duplicate_1 ; ULA:ula|saidaULA[2] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.469      ; 13.257     ;
; -11.472 ; MUX:mux|out1[7]~_Duplicate_1 ; ULA:ula|saidaULA[2] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.469      ; 12.979     ;
; -11.279 ; MUX:mux|out1[6]~_Duplicate_1 ; ULA:ula|saidaULA[2] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.469      ; 12.786     ;
; -10.953 ; MUX:mux|out1[3]~_Duplicate_1 ; ULA:ula|saidaULA[3] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.770      ; 12.761     ;
; -10.886 ; MUX:mux|out0[6]~_Duplicate_1 ; ULA:ula|saidaULA[3] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.746      ; 12.670     ;
; -10.883 ; MUX:mux|out1[2]~_Duplicate_1 ; ULA:ula|saidaULA[3] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.746      ; 12.667     ;
; -10.874 ; MUX:mux|out1[0]~_Duplicate_1 ; ULA:ula|saidaULA[3] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.770      ; 12.682     ;
; -10.789 ; MUX:mux|out0[7]~_Duplicate_1 ; ULA:ula|saidaULA[3] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.746      ; 12.573     ;
; -10.770 ; MUX:mux|out1[1]~_Duplicate_1 ; ULA:ula|saidaULA[3] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.746      ; 12.554     ;
; -10.768 ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[3] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.469      ; 12.275     ;
; -10.738 ; MUX:mux|out1[4]~_Duplicate_1 ; ULA:ula|saidaULA[3] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.469      ; 12.245     ;
; -10.668 ; MUX:mux|out0[4]~_Duplicate_1 ; ULA:ula|saidaULA[1] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.632      ; 12.338     ;
; -10.460 ; MUX:mux|out1[7]~_Duplicate_1 ; ULA:ula|saidaULA[3] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.469      ; 11.967     ;
; -10.379 ; MUX:mux|out0[5]~_Duplicate_1 ; ULA:ula|saidaULA[2] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.746      ; 12.163     ;
; -10.267 ; MUX:mux|out1[6]~_Duplicate_1 ; ULA:ula|saidaULA[3] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.469      ; 11.774     ;
; -9.930  ; MUX:mux|out0[3]~_Duplicate_1 ; ULA:ula|saidaULA[0] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.940      ; 11.908     ;
; -9.367  ; MUX:mux|out0[5]~_Duplicate_1 ; ULA:ula|saidaULA[3] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.746      ; 11.151     ;
; -8.431  ; MUX:mux|out0[3]~_Duplicate_1 ; ULA:ula|saidaULA[1] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.941      ; 10.410     ;
; -8.419  ; MUX:mux|out0[4]~_Duplicate_1 ; ULA:ula|saidaULA[2] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.746      ; 10.203     ;
; -8.218  ; MUX:mux|out1[3]~_Duplicate_1 ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.767      ; 10.023     ;
; -8.151  ; MUX:mux|out0[6]~_Duplicate_1 ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.743      ; 9.932      ;
; -8.148  ; MUX:mux|out1[2]~_Duplicate_1 ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.743      ; 9.929      ;
; -8.139  ; MUX:mux|out1[0]~_Duplicate_1 ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.767      ; 9.944      ;
; -8.054  ; MUX:mux|out0[7]~_Duplicate_1 ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.743      ; 9.835      ;
; -8.035  ; MUX:mux|out1[1]~_Duplicate_1 ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.743      ; 9.816      ;
; -8.033  ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.466      ; 9.537      ;
; -8.003  ; MUX:mux|out1[4]~_Duplicate_1 ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.466      ; 9.507      ;
; -7.877  ; MUX:mux|out0[2]~_Duplicate_1 ; ULA:ula|saidaULA[0] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.628      ; 9.543      ;
; -7.725  ; MUX:mux|out1[7]~_Duplicate_1 ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.466      ; 9.229      ;
; -7.532  ; MUX:mux|out1[6]~_Duplicate_1 ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.466      ; 9.036      ;
; -7.407  ; MUX:mux|out0[4]~_Duplicate_1 ; ULA:ula|saidaULA[3] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.746      ; 9.191      ;
; -7.343  ; MUX:mux|out1[0]              ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.388      ;
; -7.343  ; MUX:mux|out1[1]              ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.388      ;
; -7.343  ; MUX:mux|out1[2]              ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.388      ;
; -7.343  ; MUX:mux|out1[3]              ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.388      ;
; -7.343  ; MUX:mux|out1[4]              ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.388      ;
; -7.242  ; MUX:mux|out0[0]              ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.287      ;
; -7.242  ; MUX:mux|out0[1]              ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.287      ;
; -7.242  ; MUX:mux|out0[2]              ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.287      ;
; -7.242  ; MUX:mux|out0[3]              ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.287      ;
; -7.242  ; MUX:mux|out0[4]              ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.287      ;
; -6.961  ; MUX:mux|out1[0]              ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.006      ;
; -6.961  ; MUX:mux|out1[1]              ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.006      ;
; -6.961  ; MUX:mux|out1[2]              ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.006      ;
; -6.961  ; MUX:mux|out1[3]              ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.006      ;
; -6.961  ; MUX:mux|out1[4]              ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.006      ;
; -6.961  ; MUX:mux|out1[5]              ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.006      ;
; -6.961  ; MUX:mux|out1[6]              ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.006      ;
; -6.961  ; MUX:mux|out1[7]              ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 8.006      ;
; -6.905  ; MUX:mux|out1[3]~_Duplicate_1 ; ULA:ula|saidaULA[5] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.746      ; 8.689      ;
; -6.860  ; MUX:mux|out0[0]              ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 7.905      ;
; -6.860  ; MUX:mux|out0[1]              ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 7.905      ;
; -6.860  ; MUX:mux|out0[2]              ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 7.905      ;
; -6.860  ; MUX:mux|out0[3]              ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 7.905      ;
; -6.860  ; MUX:mux|out0[4]              ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 7.905      ;
; -6.860  ; MUX:mux|out0[5]              ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 7.905      ;
; -6.860  ; MUX:mux|out0[6]              ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 7.905      ;
; -6.860  ; MUX:mux|out0[7]              ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.007      ; 7.905      ;
; -6.838  ; MUX:mux|out0[6]~_Duplicate_1 ; ULA:ula|saidaULA[5] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.722      ; 8.598      ;
; -6.835  ; MUX:mux|out1[2]~_Duplicate_1 ; ULA:ula|saidaULA[5] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.722      ; 8.595      ;
; -6.826  ; MUX:mux|out1[0]~_Duplicate_1 ; ULA:ula|saidaULA[5] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.746      ; 8.610      ;
; -6.741  ; MUX:mux|out0[7]~_Duplicate_1 ; ULA:ula|saidaULA[5] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.722      ; 8.501      ;
; -6.722  ; MUX:mux|out1[1]~_Duplicate_1 ; ULA:ula|saidaULA[5] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.722      ; 8.482      ;
; -6.720  ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[5] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.445      ; 8.203      ;
; -6.690  ; MUX:mux|out1[4]~_Duplicate_1 ; ULA:ula|saidaULA[5] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.445      ; 8.173      ;
; -6.632  ; MUX:mux|out0[5]~_Duplicate_1 ; ULA:ula|saidaULA[4] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.743      ; 8.413      ;
; -6.617  ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[7] ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.466      ; 8.121      ;
; -6.609  ; MUX:mux|out1[0]              ; ULA:ula|saidaULA[5] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.014     ; 7.633      ;
; -6.609  ; MUX:mux|out1[1]              ; ULA:ula|saidaULA[5] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.014     ; 7.633      ;
; -6.609  ; MUX:mux|out1[2]              ; ULA:ula|saidaULA[5] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.014     ; 7.633      ;
+---------+------------------------------+---------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'KEY[0]'                                                                                                                 ;
+-------+------------------------------+------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                    ; To Node                      ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------------+------------------------------+--------------+-------------+--------------+------------+------------+
; 0.445 ; MUX:mux|out1[0]~_Duplicate_1 ; MUX:mux|out1[0]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; MUX:mux|out0[1]~_Duplicate_1 ; MUX:mux|out0[1]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; MUX:mux|out2[0]              ; MUX:mux|out2[0]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; MUX:mux|out2[1]              ; MUX:mux|out2[1]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; MUX:mux|out2[2]              ; MUX:mux|out2[2]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.731      ;
; 0.767 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[5]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.746      ; 1.799      ;
; 0.848 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.770      ; 1.904      ;
; 0.921 ; MUX:mux|out2[2]              ; MUX:mux|choiceOut[2]         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.207      ;
; 0.979 ; MUX:mux|out2[5]              ; ULA:ula|saidaULA[5]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.746      ; 2.011      ;
; 1.056 ; MUX:mux|out2[5]              ; ULA:ula|saidaULA[1]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.656      ; 1.998      ;
; 1.065 ; MUX:mux|out2[0]              ; MUX:mux|choiceOut[0]         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.351      ;
; 1.226 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[1]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.656      ; 2.168      ;
; 1.262 ; MUX:mux|out2[5]              ; ULA:ula|saidaULA[6]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.767      ; 2.315      ;
; 1.344 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[0]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.655      ; 2.285      ;
; 1.459 ; MUX:mux|out0[2]~_Duplicate_1 ; MUX:mux|out0[2]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.745      ;
; 1.463 ; MUX:mux|out2[5]              ; ULA:ula|saidaULA[4]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.767      ; 2.516      ;
; 1.493 ; MUX:mux|out2[5]              ; ULA:ula|saidaULA[7]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.767      ; 2.546      ;
; 1.495 ; MUX:mux|out2[5]              ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.770      ; 2.551      ;
; 1.495 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[6]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.767      ; 2.548      ;
; 1.495 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[4]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.767      ; 2.548      ;
; 1.530 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[3]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.770      ; 2.586      ;
; 1.598 ; MUX:mux|out2[5]              ; ULA:ula|saidaULA[3]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.770      ; 2.654      ;
; 1.633 ; MUX:mux|out2[3]              ; MUX:mux|out2[3]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.919      ;
; 1.676 ; ULA:ula|saidaULA[7]          ; MUX:mux|choiceOut[7]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -1.052     ; 0.910      ;
; 1.736 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[7]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.767      ; 2.789      ;
; 1.745 ; MUX:mux|out0[3]~_Duplicate_1 ; MUX:mux|out0[3]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.031      ;
; 1.750 ; MUX:mux|out2[6]              ; MUX:mux|out2[6]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.036      ;
; 1.818 ; ULA:ula|saidaULA[6]          ; MUX:mux|choiceOut[6]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -1.052     ; 1.052      ;
; 1.839 ; MUX:mux|out2[3]              ; MUX:mux|choiceOut[3]         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.312      ; 2.437      ;
; 1.870 ; MUX:mux|out0[0]~_Duplicate_1 ; MUX:mux|out0[0]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.156      ;
; 1.879 ; ULA:ula|saidaULA[5]          ; MUX:mux|choiceOut[5]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -1.031     ; 1.134      ;
; 1.897 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[3]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 1.055      ; 3.238      ;
; 1.902 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[4]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 1.052      ; 3.240      ;
; 1.902 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[6]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 1.052      ; 3.240      ;
; 1.902 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[7]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 1.052      ; 3.240      ;
; 1.904 ; MUX:mux|out2[5]              ; ULA:ula|saidaULA[0]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.655      ; 2.845      ;
; 1.959 ; ULA:ula|saidaULA[3]          ; MUX:mux|choiceOut[3]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.743     ; 1.502      ;
; 1.977 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[5]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 1.031      ; 3.294      ;
; 1.991 ; MUX:mux|out2[6]              ; MUX:mux|choiceOut[6]         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.277      ;
; 2.001 ; MUX:mux|out0[0]~_Duplicate_1 ; ULA:ula|saidaULA[0]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.940      ; 3.227      ;
; 2.040 ; MUX:mux|out0[2]~_Duplicate_1 ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.743      ; 3.069      ;
; 2.046 ; MUX:mux|out0[3]~_Duplicate_1 ; MUX:mux|choiceOut[3]         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.312      ; 2.644      ;
; 2.056 ; ULA:ula|saidaULA[4]          ; MUX:mux|choiceOut[4]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -1.052     ; 1.290      ;
; 2.069 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 1.055      ; 3.410      ;
; 2.075 ; ULA:ula|saidaULA[2]          ; MUX:mux|choiceOut[2]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.743     ; 1.618      ;
; 2.103 ; MUX:mux|out0[1]~_Duplicate_1 ; ULA:ula|saidaULA[1]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.941      ; 3.330      ;
; 2.113 ; MUX:mux|out0[7]~_Duplicate_1 ; ULA:ula|saidaULA[7]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.743      ; 3.142      ;
; 2.164 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[5]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.722      ; 3.172      ;
; 2.172 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[3]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.746      ; 3.204      ;
; 2.177 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[4]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.743      ; 3.206      ;
; 2.177 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[6]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.743      ; 3.206      ;
; 2.177 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[7]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.743      ; 3.206      ;
; 2.256 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.746      ; 3.288      ;
; 2.277 ; MUX:mux|out0[2]~_Duplicate_1 ; MUX:mux|choiceOut[2]         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.563      ;
; 2.303 ; MUX:mux|out1[0]~_Duplicate_1 ; MUX:mux|choiceOut[0]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.285     ; 2.304      ;
; 2.308 ; MUX:mux|out1[2]~_Duplicate_1 ; MUX:mux|out1[2]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.594      ;
; 2.361 ; MUX:mux|out1[3]~_Duplicate_1 ; MUX:mux|choiceOut[3]         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.027      ; 2.674      ;
; 2.432 ; MUX:mux|out2[5]              ; MUX:mux|out2[5]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.718      ;
; 2.463 ; MUX:mux|out1[2]~_Duplicate_1 ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.746      ; 3.495      ;
; 2.536 ; MUX:mux|out0[4]~_Duplicate_1 ; MUX:mux|out0[4]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.822      ;
; 2.601 ; MUX:mux|out0[5]~_Duplicate_1 ; MUX:mux|out0[5]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.887      ;
; 2.604 ; MUX:mux|out1[2]~_Duplicate_1 ; MUX:mux|choiceOut[2]         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.003      ; 2.893      ;
; 2.622 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[0]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.940      ; 3.848      ;
; 2.630 ; MUX:mux|out1[6]~_Duplicate_1 ; MUX:mux|out1[6]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.916      ;
; 2.652 ; MUX:mux|out2[7]              ; MUX:mux|out2[7]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 2.938      ;
; 2.705 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[1]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.941      ; 3.932      ;
; 2.716 ; MUX:mux|out2[4]              ; MUX:mux|out2[4]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 3.002      ;
; 2.740 ; ULA:ula|saidaULA[0]          ; MUX:mux|choiceOut[0]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.940     ; 2.086      ;
; 2.797 ; MUX:mux|out1[0]~_Duplicate_1 ; ULA:ula|saidaULA[0]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.655      ; 3.738      ;
; 2.809 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[0]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.631      ; 3.726      ;
; 2.876 ; MUX:mux|out0[1]~_Duplicate_1 ; MUX:mux|out0[1]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 1.045      ; 4.032      ;
; 2.892 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[1]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.632      ; 3.810      ;
; 2.895 ; MUX:mux|out0[0]~_Duplicate_1 ; ULA:ula|saidaULA[1]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.941      ; 4.122      ;
; 2.897 ; MUX:mux|out0[7]~_Duplicate_1 ; MUX:mux|out0[7]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 3.183      ;
; 2.904 ; MUX:mux|out1[6]~_Duplicate_1 ; ULA:ula|saidaULA[6]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.466      ; 3.656      ;
; 2.947 ; MUX:mux|out1[7]~_Duplicate_1 ; MUX:mux|out1[7]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 3.233      ;
; 2.952 ; MUX:mux|out1[4]~_Duplicate_1 ; MUX:mux|out1[4]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 3.238      ;
; 2.966 ; MUX:mux|out1[0]~_Duplicate_1 ; MUX:mux|out1[0]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.760      ; 3.837      ;
; 3.016 ; MUX:mux|out2[4]              ; MUX:mux|choiceOut[4]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.285     ; 3.017      ;
; 3.017 ; MUX:mux|out0[3]~_Duplicate_1 ; MUX:mux|out0[3]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 1.045      ; 4.173      ;
; 3.046 ; MUX:mux|out1[3]~_Duplicate_1 ; MUX:mux|out1[3]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 3.332      ;
; 3.108 ; MUX:mux|out0[4]~_Duplicate_1 ; ULA:ula|saidaULA[4]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.743      ; 4.137      ;
; 3.191 ; MUX:mux|out0[5]~_Duplicate_1 ; ULA:ula|saidaULA[5]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.722      ; 4.199      ;
; 3.210 ; MUX:mux|out0[3]~_Duplicate_1 ; ULA:ula|saidaULA[3]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 1.055      ; 4.551      ;
; 3.216 ; MUX:mux|out1[3]~_Duplicate_1 ; ULA:ula|saidaULA[3]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.770      ; 4.272      ;
; 3.217 ; MUX:mux|out1[1]~_Duplicate_1 ; ULA:ula|saidaULA[1]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.632      ; 4.135      ;
; 3.222 ; MUX:mux|out1[5]~_Duplicate_1 ; MUX:mux|out1[5]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 3.508      ;
; 3.303 ; MUX:mux|out0[4]~_Duplicate_1 ; MUX:mux|out0[4]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.736      ; 4.150      ;
; 3.318 ; MUX:mux|out0[5]~_Duplicate_1 ; MUX:mux|out0[5]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.736      ; 4.165      ;
; 3.322 ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[5]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.445      ; 4.053      ;
; 3.333 ; MUX:mux|out0[6]~_Duplicate_1 ; ULA:ula|saidaULA[6]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.743      ; 4.362      ;
; 3.378 ; MUX:mux|out0[6]~_Duplicate_1 ; MUX:mux|out0[6]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 3.664      ;
; 3.404 ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[0]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.354      ; 4.044      ;
; 3.405 ; MUX:mux|out0[0]~_Duplicate_1 ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 1.055      ; 4.746      ;
; 3.449 ; MUX:mux|out0[2]~_Duplicate_1 ; MUX:mux|out0[2]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.733      ; 4.293      ;
; 3.529 ; MUX:mux|out1[7]~_Duplicate_1 ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.469      ; 4.284      ;
; 3.558 ; MUX:mux|out1[6]~_Duplicate_1 ; MUX:mux|choiceOut[6]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.586     ; 3.258      ;
; 3.581 ; ULA:ula|saidaULA[1]          ; MUX:mux|choiceOut[1]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.941     ; 2.926      ;
; 3.602 ; MUX:mux|out0[1]~_Duplicate_1 ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 1.055      ; 4.943      ;
; 3.613 ; MUX:mux|out0[0]~_Duplicate_1 ; ULA:ula|saidaULA[3]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 1.055      ; 4.954      ;
+-------+------------------------------+------------------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'KEY[0]'                                                                       ;
+--------+--------------+----------------+------------------+--------+------------+------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock  ; Clock Edge ; Target                       ;
+--------+--------------+----------------+------------------+--------+------------+------------------------------+
; -1.807 ; 0.500        ; 2.307          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[0]              ;
; -1.807 ; 0.500        ; 2.307          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[0]              ;
; -1.807 ; 0.500        ; 2.307          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[1]              ;
; -1.807 ; 0.500        ; 2.307          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[1]              ;
; -1.807 ; 0.500        ; 2.307          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[2]              ;
; -1.807 ; 0.500        ; 2.307          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[2]              ;
; -1.807 ; 0.500        ; 2.307          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[3]              ;
; -1.807 ; 0.500        ; 2.307          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[3]              ;
; -1.807 ; 0.500        ; 2.307          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[4]              ;
; -1.807 ; 0.500        ; 2.307          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[4]              ;
; -1.807 ; 0.500        ; 2.307          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[5]              ;
; -1.807 ; 0.500        ; 2.307          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[5]              ;
; -1.807 ; 0.500        ; 2.307          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[6]              ;
; -1.807 ; 0.500        ; 2.307          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[6]              ;
; -1.807 ; 0.500        ; 2.307          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[7]              ;
; -1.807 ; 0.500        ; 2.307          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[7]              ;
; -1.807 ; 0.500        ; 2.307          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[0]              ;
; -1.807 ; 0.500        ; 2.307          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[0]              ;
; -1.807 ; 0.500        ; 2.307          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[1]              ;
; -1.807 ; 0.500        ; 2.307          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[1]              ;
; -1.807 ; 0.500        ; 2.307          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[2]              ;
; -1.807 ; 0.500        ; 2.307          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[2]              ;
; -1.807 ; 0.500        ; 2.307          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[3]              ;
; -1.807 ; 0.500        ; 2.307          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[3]              ;
; -1.807 ; 0.500        ; 2.307          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[4]              ;
; -1.807 ; 0.500        ; 2.307          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[4]              ;
; -1.807 ; 0.500        ; 2.307          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[5]              ;
; -1.807 ; 0.500        ; 2.307          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[5]              ;
; -1.807 ; 0.500        ; 2.307          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[6]              ;
; -1.807 ; 0.500        ; 2.307          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[6]              ;
; -1.807 ; 0.500        ; 2.307          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[7]              ;
; -1.807 ; 0.500        ; 2.307          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[7]              ;
; -1.469 ; 1.000        ; 2.469          ; Port Rate        ; KEY[0] ; Rise       ; KEY[0]                       ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|choiceOut[0]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|choiceOut[0]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|choiceOut[1]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|choiceOut[1]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|choiceOut[2]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|choiceOut[2]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|choiceOut[3]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|choiceOut[3]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|choiceOut[4]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|choiceOut[4]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|choiceOut[5]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|choiceOut[5]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|choiceOut[6]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|choiceOut[6]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|choiceOut[7]         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|choiceOut[7]         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[0]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[0]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[1]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[1]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[2]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[2]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[3]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[3]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[4]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[4]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[5]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[5]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[6]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[6]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[7]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[7]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[0]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[0]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[1]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[1]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[2]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[2]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[3]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[3]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[4]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[4]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[5]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[5]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[6]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[6]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[7]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[7]~_Duplicate_1 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out2[0]              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out2[0]              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out2[1]              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out2[1]              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out2[2]              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out2[2]              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out2[3]              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out2[3]              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out2[4]              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out2[4]              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out2[5]              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out2[5]              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out2[6]              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out2[6]              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out2[7]              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out2[7]              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; ULA:ula|saidaULA[0]          ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; KEY[0] ; Fall       ; ULA:ula|saidaULA[0]          ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; KEY[0] ; Fall       ; ULA:ula|saidaULA[1]          ;
+--------+--------------+----------------+------------------+--------+------------+------------------------------+


+---------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'CLOCK_50'                                                                    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+
; -1.631 ; 1.000        ; 2.631          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[0]        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[0]        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[1]        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[1]        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[2]        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[2]        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[3]        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[3]        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[4]        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[4]        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[5]        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[5]        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[6]        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[6]        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[7]        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[7]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50|combout          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50|combout          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; RAM|dataOut[0]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; RAM|dataOut[0]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; RAM|dataOut[1]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; RAM|dataOut[1]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; RAM|dataOut[2]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; RAM|dataOut[2]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; RAM|dataOut[3]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; RAM|dataOut[3]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; RAM|dataOut[4]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; RAM|dataOut[4]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; RAM|dataOut[5]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; RAM|dataOut[5]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; RAM|dataOut[6]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; RAM|dataOut[6]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; RAM|dataOut[7]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; RAM|dataOut[7]|clk        ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; KEY[*]    ; KEY[0]     ; 9.173 ; 9.173 ; Fall       ; KEY[0]          ;
;  KEY[1]   ; KEY[0]     ; 5.120 ; 5.120 ; Fall       ; KEY[0]          ;
;  KEY[2]   ; KEY[0]     ; 9.173 ; 9.173 ; Fall       ; KEY[0]          ;
; SW[*]     ; KEY[0]     ; 6.652 ; 6.652 ; Fall       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; 2.992 ; 2.992 ; Fall       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; 3.890 ; 3.890 ; Fall       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; 2.615 ; 2.615 ; Fall       ; KEY[0]          ;
;  SW[3]    ; KEY[0]     ; 3.169 ; 3.169 ; Fall       ; KEY[0]          ;
;  SW[4]    ; KEY[0]     ; 3.879 ; 3.879 ; Fall       ; KEY[0]          ;
;  SW[5]    ; KEY[0]     ; 3.830 ; 3.830 ; Fall       ; KEY[0]          ;
;  SW[6]    ; KEY[0]     ; 3.120 ; 3.120 ; Fall       ; KEY[0]          ;
;  SW[7]    ; KEY[0]     ; 3.383 ; 3.383 ; Fall       ; KEY[0]          ;
;  SW[8]    ; KEY[0]     ; 6.652 ; 6.652 ; Fall       ; KEY[0]          ;
;  SW[9]    ; KEY[0]     ; 6.371 ; 6.371 ; Fall       ; KEY[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; KEY[*]    ; KEY[0]     ; -3.865 ; -3.865 ; Fall       ; KEY[0]          ;
;  KEY[1]   ; KEY[0]     ; -3.865 ; -3.865 ; Fall       ; KEY[0]          ;
;  KEY[2]   ; KEY[0]     ; -4.635 ; -4.635 ; Fall       ; KEY[0]          ;
; SW[*]     ; KEY[0]     ; 0.439  ; 0.439  ; Fall       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; 0.409  ; 0.409  ; Fall       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; 0.064  ; 0.064  ; Fall       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; 0.439  ; 0.439  ; Fall       ; KEY[0]          ;
;  SW[3]    ; KEY[0]     ; -1.001 ; -1.001 ; Fall       ; KEY[0]          ;
;  SW[4]    ; KEY[0]     ; -1.464 ; -1.464 ; Fall       ; KEY[0]          ;
;  SW[5]    ; KEY[0]     ; -1.649 ; -1.649 ; Fall       ; KEY[0]          ;
;  SW[6]    ; KEY[0]     ; -1.220 ; -1.220 ; Fall       ; KEY[0]          ;
;  SW[7]    ; KEY[0]     ; -1.513 ; -1.513 ; Fall       ; KEY[0]          ;
;  SW[8]    ; KEY[0]     ; -0.965 ; -0.965 ; Fall       ; KEY[0]          ;
;  SW[9]    ; KEY[0]     ; -1.070 ; -1.070 ; Fall       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Clock to Output Times                                                 ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; LEDR[*]   ; CLOCK_50   ; 7.028 ; 7.028 ; Rise       ; CLOCK_50        ;
;  LEDR[0]  ; CLOCK_50   ; 6.873 ; 6.873 ; Rise       ; CLOCK_50        ;
;  LEDR[1]  ; CLOCK_50   ; 6.893 ; 6.893 ; Rise       ; CLOCK_50        ;
;  LEDR[2]  ; CLOCK_50   ; 6.899 ; 6.899 ; Rise       ; CLOCK_50        ;
;  LEDR[3]  ; CLOCK_50   ; 6.889 ; 6.889 ; Rise       ; CLOCK_50        ;
;  LEDR[4]  ; CLOCK_50   ; 7.027 ; 7.027 ; Rise       ; CLOCK_50        ;
;  LEDR[5]  ; CLOCK_50   ; 6.920 ; 6.920 ; Rise       ; CLOCK_50        ;
;  LEDR[6]  ; CLOCK_50   ; 6.876 ; 6.876 ; Rise       ; CLOCK_50        ;
;  LEDR[7]  ; CLOCK_50   ; 7.028 ; 7.028 ; Rise       ; CLOCK_50        ;
; LEDG[*]   ; KEY[0]     ; 6.886 ; 6.886 ; Fall       ; KEY[0]          ;
;  LEDG[0]  ; KEY[0]     ; 6.295 ; 6.295 ; Fall       ; KEY[0]          ;
;  LEDG[1]  ; KEY[0]     ; 6.301 ; 6.301 ; Fall       ; KEY[0]          ;
;  LEDG[2]  ; KEY[0]     ; 6.836 ; 6.836 ; Fall       ; KEY[0]          ;
;  LEDG[3]  ; KEY[0]     ; 6.886 ; 6.886 ; Fall       ; KEY[0]          ;
;  LEDG[4]  ; KEY[0]     ; 6.638 ; 6.638 ; Fall       ; KEY[0]          ;
;  LEDG[5]  ; KEY[0]     ; 6.688 ; 6.688 ; Fall       ; KEY[0]          ;
;  LEDG[6]  ; KEY[0]     ; 6.310 ; 6.310 ; Fall       ; KEY[0]          ;
;  LEDG[7]  ; KEY[0]     ; 6.352 ; 6.352 ; Fall       ; KEY[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-----------------------------------------------------------------------+
; Minimum Clock to Output Times                                         ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; LEDR[*]   ; CLOCK_50   ; 6.873 ; 6.873 ; Rise       ; CLOCK_50        ;
;  LEDR[0]  ; CLOCK_50   ; 6.873 ; 6.873 ; Rise       ; CLOCK_50        ;
;  LEDR[1]  ; CLOCK_50   ; 6.893 ; 6.893 ; Rise       ; CLOCK_50        ;
;  LEDR[2]  ; CLOCK_50   ; 6.899 ; 6.899 ; Rise       ; CLOCK_50        ;
;  LEDR[3]  ; CLOCK_50   ; 6.889 ; 6.889 ; Rise       ; CLOCK_50        ;
;  LEDR[4]  ; CLOCK_50   ; 7.027 ; 7.027 ; Rise       ; CLOCK_50        ;
;  LEDR[5]  ; CLOCK_50   ; 6.920 ; 6.920 ; Rise       ; CLOCK_50        ;
;  LEDR[6]  ; CLOCK_50   ; 6.876 ; 6.876 ; Rise       ; CLOCK_50        ;
;  LEDR[7]  ; CLOCK_50   ; 7.028 ; 7.028 ; Rise       ; CLOCK_50        ;
; LEDG[*]   ; KEY[0]     ; 6.295 ; 6.295 ; Fall       ; KEY[0]          ;
;  LEDG[0]  ; KEY[0]     ; 6.295 ; 6.295 ; Fall       ; KEY[0]          ;
;  LEDG[1]  ; KEY[0]     ; 6.301 ; 6.301 ; Fall       ; KEY[0]          ;
;  LEDG[2]  ; KEY[0]     ; 6.836 ; 6.836 ; Fall       ; KEY[0]          ;
;  LEDG[3]  ; KEY[0]     ; 6.886 ; 6.886 ; Fall       ; KEY[0]          ;
;  LEDG[4]  ; KEY[0]     ; 6.638 ; 6.638 ; Fall       ; KEY[0]          ;
;  LEDG[5]  ; KEY[0]     ; 6.688 ; 6.688 ; Fall       ; KEY[0]          ;
;  LEDG[6]  ; KEY[0]     ; 6.310 ; 6.310 ; Fall       ; KEY[0]          ;
;  LEDG[7]  ; KEY[0]     ; 6.352 ; 6.352 ; Fall       ; KEY[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+---------------------------------+
; Fast Model Setup Summary        ;
+--------+--------+---------------+
; Clock  ; Slack  ; End Point TNS ;
+--------+--------+---------------+
; KEY[0] ; -5.012 ; -39.308       ;
+--------+--------+---------------+


+--------------------------------+
; Fast Model Hold Summary        ;
+--------+-------+---------------+
; Clock  ; Slack ; End Point TNS ;
+--------+-------+---------------+
; KEY[0] ; 0.215 ; 0.000         ;
+--------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+----------+--------+--------------------+
; Clock    ; Slack  ; End Point TNS      ;
+----------+--------+--------------------+
; KEY[0]   ; -1.519 ; -89.830            ;
; CLOCK_50 ; -1.380 ; -9.380             ;
+----------+--------+--------------------+


+------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'KEY[0]'                                                                                                         ;
+--------+------------------------------+----------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                    ; To Node              ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------+----------------------+--------------+-------------+--------------+------------+------------+
; -5.012 ; MUX:mux|out1[3]~_Duplicate_1 ; ULA:ula|saidaULA[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.274      ; 6.318      ;
; -4.996 ; MUX:mux|out1[2]~_Duplicate_1 ; ULA:ula|saidaULA[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.259      ; 6.287      ;
; -4.985 ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.157      ; 6.174      ;
; -4.970 ; MUX:mux|out0[6]~_Duplicate_1 ; ULA:ula|saidaULA[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.259      ; 6.261      ;
; -4.970 ; MUX:mux|out1[0]~_Duplicate_1 ; ULA:ula|saidaULA[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.274      ; 6.276      ;
; -4.968 ; MUX:mux|out1[4]~_Duplicate_1 ; ULA:ula|saidaULA[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.157      ; 6.157      ;
; -4.951 ; MUX:mux|out0[7]~_Duplicate_1 ; ULA:ula|saidaULA[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.259      ; 6.242      ;
; -4.945 ; MUX:mux|out1[1]~_Duplicate_1 ; ULA:ula|saidaULA[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.259      ; 6.236      ;
; -4.845 ; MUX:mux|out1[7]~_Duplicate_1 ; ULA:ula|saidaULA[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.157      ; 6.034      ;
; -4.811 ; MUX:mux|out1[6]~_Duplicate_1 ; ULA:ula|saidaULA[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.157      ; 6.000      ;
; -4.439 ; MUX:mux|out1[3]~_Duplicate_1 ; ULA:ula|saidaULA[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.276      ; 5.747      ;
; -4.423 ; MUX:mux|out1[2]~_Duplicate_1 ; ULA:ula|saidaULA[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.261      ; 5.716      ;
; -4.423 ; MUX:mux|out0[5]~_Duplicate_1 ; ULA:ula|saidaULA[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.259      ; 5.714      ;
; -4.412 ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.159      ; 5.603      ;
; -4.397 ; MUX:mux|out0[6]~_Duplicate_1 ; ULA:ula|saidaULA[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.261      ; 5.690      ;
; -4.397 ; MUX:mux|out1[0]~_Duplicate_1 ; ULA:ula|saidaULA[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.276      ; 5.705      ;
; -4.395 ; MUX:mux|out1[4]~_Duplicate_1 ; ULA:ula|saidaULA[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.159      ; 5.586      ;
; -4.378 ; MUX:mux|out0[7]~_Duplicate_1 ; ULA:ula|saidaULA[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.261      ; 5.671      ;
; -4.372 ; MUX:mux|out1[1]~_Duplicate_1 ; ULA:ula|saidaULA[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.261      ; 5.665      ;
; -4.272 ; MUX:mux|out1[7]~_Duplicate_1 ; ULA:ula|saidaULA[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.159      ; 5.463      ;
; -4.238 ; MUX:mux|out1[6]~_Duplicate_1 ; ULA:ula|saidaULA[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.159      ; 5.429      ;
; -3.850 ; MUX:mux|out0[5]~_Duplicate_1 ; ULA:ula|saidaULA[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.261      ; 5.143      ;
; -3.783 ; MUX:mux|out0[4]~_Duplicate_1 ; ULA:ula|saidaULA[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.259      ; 5.074      ;
; -3.628 ; MUX:mux|out1[3]~_Duplicate_1 ; ULA:ula|saidaULA[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.325      ; 4.985      ;
; -3.612 ; MUX:mux|out1[2]~_Duplicate_1 ; ULA:ula|saidaULA[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 4.954      ;
; -3.601 ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.208      ; 4.841      ;
; -3.586 ; MUX:mux|out0[6]~_Duplicate_1 ; ULA:ula|saidaULA[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 4.928      ;
; -3.586 ; MUX:mux|out1[0]~_Duplicate_1 ; ULA:ula|saidaULA[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.325      ; 4.943      ;
; -3.584 ; MUX:mux|out1[4]~_Duplicate_1 ; ULA:ula|saidaULA[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.208      ; 4.824      ;
; -3.567 ; MUX:mux|out0[7]~_Duplicate_1 ; ULA:ula|saidaULA[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 4.909      ;
; -3.561 ; MUX:mux|out1[1]~_Duplicate_1 ; ULA:ula|saidaULA[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 4.903      ;
; -3.461 ; MUX:mux|out1[7]~_Duplicate_1 ; ULA:ula|saidaULA[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.208      ; 4.701      ;
; -3.427 ; MUX:mux|out1[6]~_Duplicate_1 ; ULA:ula|saidaULA[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.208      ; 4.667      ;
; -3.246 ; MUX:mux|out1[3]~_Duplicate_1 ; ULA:ula|saidaULA[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.322      ; 4.600      ;
; -3.230 ; MUX:mux|out1[2]~_Duplicate_1 ; ULA:ula|saidaULA[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.307      ; 4.569      ;
; -3.219 ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.205      ; 4.456      ;
; -3.210 ; MUX:mux|out0[4]~_Duplicate_1 ; ULA:ula|saidaULA[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.261      ; 4.503      ;
; -3.204 ; MUX:mux|out0[6]~_Duplicate_1 ; ULA:ula|saidaULA[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.307      ; 4.543      ;
; -3.204 ; MUX:mux|out1[0]~_Duplicate_1 ; ULA:ula|saidaULA[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.322      ; 4.558      ;
; -3.202 ; MUX:mux|out1[4]~_Duplicate_1 ; ULA:ula|saidaULA[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.205      ; 4.439      ;
; -3.185 ; MUX:mux|out0[7]~_Duplicate_1 ; ULA:ula|saidaULA[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.307      ; 4.524      ;
; -3.179 ; MUX:mux|out1[1]~_Duplicate_1 ; ULA:ula|saidaULA[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.307      ; 4.518      ;
; -3.079 ; MUX:mux|out1[7]~_Duplicate_1 ; ULA:ula|saidaULA[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.205      ; 4.316      ;
; -3.045 ; MUX:mux|out1[6]~_Duplicate_1 ; ULA:ula|saidaULA[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.205      ; 4.282      ;
; -3.039 ; MUX:mux|out0[5]~_Duplicate_1 ; ULA:ula|saidaULA[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 4.381      ;
; -2.961 ; MUX:mux|out0[3]~_Duplicate_1 ; ULA:ula|saidaULA[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.380      ; 4.373      ;
; -2.657 ; MUX:mux|out0[5]~_Duplicate_1 ; ULA:ula|saidaULA[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.307      ; 3.996      ;
; -2.399 ; MUX:mux|out0[4]~_Duplicate_1 ; ULA:ula|saidaULA[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.310      ; 3.741      ;
; -2.388 ; MUX:mux|out0[3]~_Duplicate_1 ; ULA:ula|saidaULA[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.382      ; 3.802      ;
; -2.333 ; MUX:mux|out1[3]~_Duplicate_1 ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.321      ; 3.686      ;
; -2.317 ; MUX:mux|out1[2]~_Duplicate_1 ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.306      ; 3.655      ;
; -2.306 ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.204      ; 3.542      ;
; -2.291 ; MUX:mux|out0[6]~_Duplicate_1 ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.306      ; 3.629      ;
; -2.291 ; MUX:mux|out1[0]~_Duplicate_1 ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.321      ; 3.644      ;
; -2.289 ; MUX:mux|out1[4]~_Duplicate_1 ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.204      ; 3.525      ;
; -2.272 ; MUX:mux|out0[7]~_Duplicate_1 ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.306      ; 3.610      ;
; -2.266 ; MUX:mux|out1[1]~_Duplicate_1 ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.306      ; 3.604      ;
; -2.243 ; MUX:mux|out0[2]~_Duplicate_1 ; ULA:ula|saidaULA[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.261      ; 3.536      ;
; -2.166 ; MUX:mux|out1[7]~_Duplicate_1 ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.204      ; 3.402      ;
; -2.132 ; MUX:mux|out1[6]~_Duplicate_1 ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.204      ; 3.368      ;
; -2.017 ; MUX:mux|out0[4]~_Duplicate_1 ; ULA:ula|saidaULA[3]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.307      ; 3.356      ;
; -1.810 ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.204      ; 3.046      ;
; -1.801 ; MUX:mux|out1[3]~_Duplicate_1 ; ULA:ula|saidaULA[5]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.306      ; 3.139      ;
; -1.793 ; MUX:mux|out1[4]~_Duplicate_1 ; ULA:ula|saidaULA[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.204      ; 3.029      ;
; -1.785 ; MUX:mux|out1[2]~_Duplicate_1 ; ULA:ula|saidaULA[5]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.291      ; 3.108      ;
; -1.774 ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[5]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.189      ; 2.995      ;
; -1.759 ; MUX:mux|out0[6]~_Duplicate_1 ; ULA:ula|saidaULA[5]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.291      ; 3.082      ;
; -1.759 ; MUX:mux|out1[0]~_Duplicate_1 ; ULA:ula|saidaULA[5]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.306      ; 3.097      ;
; -1.757 ; MUX:mux|out1[4]~_Duplicate_1 ; ULA:ula|saidaULA[5]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.189      ; 2.978      ;
; -1.744 ; MUX:mux|out0[5]~_Duplicate_1 ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.306      ; 3.082      ;
; -1.740 ; MUX:mux|out0[7]~_Duplicate_1 ; ULA:ula|saidaULA[5]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.291      ; 3.063      ;
; -1.734 ; MUX:mux|out1[1]~_Duplicate_1 ; ULA:ula|saidaULA[5]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.291      ; 3.057      ;
; -1.703 ; MUX:mux|out1[1]~_Duplicate_1 ; ULA:ula|saidaULA[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.306      ; 3.041      ;
; -1.670 ; MUX:mux|out0[2]~_Duplicate_1 ; ULA:ula|saidaULA[1]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.263      ; 2.965      ;
; -1.670 ; MUX:mux|out1[7]~_Duplicate_1 ; ULA:ula|saidaULA[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.204      ; 2.906      ;
; -1.636 ; MUX:mux|out1[6]~_Duplicate_1 ; ULA:ula|saidaULA[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.204      ; 2.872      ;
; -1.634 ; MUX:mux|out1[7]~_Duplicate_1 ; ULA:ula|saidaULA[5]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.189      ; 2.855      ;
; -1.600 ; MUX:mux|out1[6]~_Duplicate_1 ; ULA:ula|saidaULA[5]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.189      ; 2.821      ;
; -1.577 ; MUX:mux|out0[3]~_Duplicate_1 ; ULA:ula|saidaULA[2]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.431      ; 3.040      ;
; -1.435 ; MUX:mux|out0[0]              ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.005      ; 2.472      ;
; -1.435 ; MUX:mux|out0[1]              ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.005      ; 2.472      ;
; -1.435 ; MUX:mux|out0[2]              ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.005      ; 2.472      ;
; -1.435 ; MUX:mux|out0[3]              ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.005      ; 2.472      ;
; -1.435 ; MUX:mux|out0[4]              ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.005      ; 2.472      ;
; -1.433 ; MUX:mux|out1[3]~_Duplicate_1 ; ULA:ula|saidaULA[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.321      ; 2.786      ;
; -1.399 ; MUX:mux|out1[3]~_Duplicate_1 ; ULA:ula|saidaULA[6]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.321      ; 2.752      ;
; -1.395 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.306      ; 2.733      ;
; -1.379 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.321      ; 2.732      ;
; -1.367 ; MUX:mux|out0[1]~_Duplicate_1 ; ULA:ula|saidaULA[0]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.380      ; 2.779      ;
; -1.366 ; MUX:mux|out1[1]~_Duplicate_1 ; MUX:mux|choiceOut[1] ; KEY[0]       ; KEY[0]      ; 1.000        ; -0.121     ; 2.277      ;
; -1.332 ; MUX:mux|out1[2]~_Duplicate_1 ; ULA:ula|saidaULA[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.306      ; 2.670      ;
; -1.312 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.427      ; 2.771      ;
; -1.307 ; MUX:mux|out1[0]              ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.005      ; 2.344      ;
; -1.307 ; MUX:mux|out1[1]              ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.005      ; 2.344      ;
; -1.307 ; MUX:mux|out1[2]              ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.005      ; 2.344      ;
; -1.307 ; MUX:mux|out1[3]              ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.005      ; 2.344      ;
; -1.307 ; MUX:mux|out1[4]              ; ULA:ula|saidaULA[4]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.005      ; 2.344      ;
; -1.298 ; MUX:mux|out0[0]              ; ULA:ula|saidaULA[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.005      ; 2.335      ;
; -1.298 ; MUX:mux|out0[1]              ; ULA:ula|saidaULA[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.005      ; 2.335      ;
; -1.298 ; MUX:mux|out0[2]              ; ULA:ula|saidaULA[7]  ; KEY[0]       ; KEY[0]      ; 1.000        ; 0.005      ; 2.335      ;
+--------+------------------------------+----------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'KEY[0]'                                                                                                                 ;
+-------+------------------------------+------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                    ; To Node                      ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------------+------------------------------+--------------+-------------+--------------+------------+------------+
; 0.215 ; MUX:mux|out1[0]~_Duplicate_1 ; MUX:mux|out1[0]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; MUX:mux|out0[1]~_Duplicate_1 ; MUX:mux|out0[1]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; MUX:mux|out2[0]              ; MUX:mux|out2[0]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; MUX:mux|out2[1]              ; MUX:mux|out2[1]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; MUX:mux|out2[2]              ; MUX:mux|out2[2]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.367      ;
; 0.274 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[5]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.306      ; 0.732      ;
; 0.294 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.325      ; 0.771      ;
; 0.363 ; MUX:mux|out2[5]              ; ULA:ula|saidaULA[5]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.306      ; 0.821      ;
; 0.382 ; MUX:mux|out2[2]              ; MUX:mux|choiceOut[2]         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.534      ;
; 0.383 ; MUX:mux|out2[5]              ; ULA:ula|saidaULA[1]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.276      ; 0.811      ;
; 0.429 ; MUX:mux|out2[0]              ; MUX:mux|choiceOut[0]         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.581      ;
; 0.446 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[1]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.276      ; 0.874      ;
; 0.449 ; MUX:mux|out2[5]              ; ULA:ula|saidaULA[6]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.321      ; 0.922      ;
; 0.486 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[0]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.274      ; 0.912      ;
; 0.528 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[6]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.321      ; 1.001      ;
; 0.529 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[4]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.321      ; 1.002      ;
; 0.534 ; MUX:mux|out0[2]~_Duplicate_1 ; MUX:mux|out0[2]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.686      ;
; 0.539 ; MUX:mux|out2[5]              ; ULA:ula|saidaULA[4]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.321      ; 1.012      ;
; 0.542 ; MUX:mux|out2[5]              ; ULA:ula|saidaULA[7]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.321      ; 1.015      ;
; 0.557 ; MUX:mux|out2[5]              ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.325      ; 1.034      ;
; 0.559 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[3]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.322      ; 1.033      ;
; 0.608 ; MUX:mux|out2[4]              ; ULA:ula|saidaULA[7]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.321      ; 1.081      ;
; 0.610 ; MUX:mux|out2[5]              ; ULA:ula|saidaULA[3]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.322      ; 1.084      ;
; 0.658 ; MUX:mux|out2[3]              ; MUX:mux|out2[3]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.810      ;
; 0.661 ; MUX:mux|out2[3]              ; MUX:mux|choiceOut[3]         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.119      ; 0.932      ;
; 0.670 ; ULA:ula|saidaULA[7]          ; MUX:mux|choiceOut[7]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.427     ; 0.395      ;
; 0.678 ; MUX:mux|out0[3]~_Duplicate_1 ; MUX:mux|out0[3]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.830      ;
; 0.684 ; MUX:mux|out0[0]~_Duplicate_1 ; ULA:ula|saidaULA[0]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.380      ; 1.216      ;
; 0.685 ; MUX:mux|out2[6]              ; MUX:mux|out2[6]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.837      ;
; 0.685 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[5]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.412      ; 1.249      ;
; 0.699 ; MUX:mux|out0[2]~_Duplicate_1 ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.312      ; 1.163      ;
; 0.711 ; MUX:mux|out2[5]              ; ULA:ula|saidaULA[0]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.274      ; 1.137      ;
; 0.714 ; MUX:mux|out0[0]~_Duplicate_1 ; MUX:mux|out0[0]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.866      ;
; 0.715 ; ULA:ula|saidaULA[6]          ; MUX:mux|choiceOut[6]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.427     ; 0.440      ;
; 0.722 ; MUX:mux|out0[3]~_Duplicate_1 ; MUX:mux|choiceOut[3]         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.119      ; 0.993      ;
; 0.728 ; MUX:mux|out0[1]~_Duplicate_1 ; ULA:ula|saidaULA[1]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.382      ; 1.262      ;
; 0.728 ; MUX:mux|out2[6]              ; MUX:mux|choiceOut[6]         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.880      ;
; 0.731 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.431      ; 1.314      ;
; 0.732 ; ULA:ula|saidaULA[5]          ; MUX:mux|choiceOut[5]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.412     ; 0.472      ;
; 0.740 ; MUX:mux|out0[7]~_Duplicate_1 ; ULA:ula|saidaULA[7]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.306      ; 1.198      ;
; 0.748 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[4]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.427      ; 1.327      ;
; 0.748 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[6]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.427      ; 1.327      ;
; 0.748 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[7]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.427      ; 1.327      ;
; 0.749 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[3]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.428      ; 1.329      ;
; 0.768 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[5]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.291      ; 1.211      ;
; 0.770 ; ULA:ula|saidaULA[3]          ; MUX:mux|choiceOut[3]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.309     ; 0.613      ;
; 0.794 ; ULA:ula|saidaULA[4]          ; MUX:mux|choiceOut[4]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.427     ; 0.519      ;
; 0.810 ; ULA:ula|saidaULA[2]          ; MUX:mux|choiceOut[2]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.312     ; 0.650      ;
; 0.814 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.310      ; 1.276      ;
; 0.821 ; MUX:mux|out0[2]~_Duplicate_1 ; MUX:mux|choiceOut[2]         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 0.973      ;
; 0.852 ; MUX:mux|out1[2]~_Duplicate_1 ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.310      ; 1.314      ;
; 0.875 ; MUX:mux|out1[0]~_Duplicate_1 ; MUX:mux|choiceOut[0]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.106     ; 0.921      ;
; 0.885 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[4]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.306      ; 1.343      ;
; 0.885 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[6]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.306      ; 1.343      ;
; 0.885 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[7]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.306      ; 1.343      ;
; 0.886 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[3]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.307      ; 1.345      ;
; 0.890 ; MUX:mux|out1[2]~_Duplicate_1 ; MUX:mux|out1[2]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.042      ;
; 0.913 ; MUX:mux|out1[3]~_Duplicate_1 ; MUX:mux|choiceOut[3]         ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.013      ; 1.078      ;
; 0.928 ; MUX:mux|out2[5]              ; MUX:mux|out2[5]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.080      ;
; 0.945 ; MUX:mux|out1[2]~_Duplicate_1 ; MUX:mux|choiceOut[2]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.002     ; 1.095      ;
; 0.946 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[0]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.380      ; 1.478      ;
; 0.963 ; MUX:mux|out0[4]~_Duplicate_1 ; MUX:mux|out0[4]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.115      ;
; 0.981 ; MUX:mux|out2[6]              ; ULA:ula|saidaULA[1]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.382      ; 1.515      ;
; 0.985 ; MUX:mux|out0[0]~_Duplicate_1 ; ULA:ula|saidaULA[1]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.382      ; 1.519      ;
; 0.987 ; MUX:mux|out0[5]~_Duplicate_1 ; MUX:mux|out0[5]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.139      ;
; 0.992 ; MUX:mux|out1[0]~_Duplicate_1 ; ULA:ula|saidaULA[0]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.274      ; 1.418      ;
; 1.014 ; MUX:mux|out2[7]              ; MUX:mux|out2[7]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.166      ;
; 1.015 ; MUX:mux|out1[6]~_Duplicate_1 ; ULA:ula|saidaULA[6]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.204      ; 1.371      ;
; 1.016 ; MUX:mux|out1[6]~_Duplicate_1 ; MUX:mux|out1[6]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.168      ;
; 1.029 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[0]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.259      ; 1.440      ;
; 1.040 ; MUX:mux|out2[4]              ; MUX:mux|out2[4]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.192      ;
; 1.041 ; MUX:mux|out0[1]~_Duplicate_1 ; MUX:mux|out0[1]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.422      ; 1.506      ;
; 1.045 ; ULA:ula|saidaULA[0]          ; MUX:mux|choiceOut[0]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.380     ; 0.817      ;
; 1.064 ; MUX:mux|out2[7]              ; ULA:ula|saidaULA[1]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.261      ; 1.477      ;
; 1.097 ; MUX:mux|out0[3]~_Duplicate_1 ; MUX:mux|out0[3]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.422      ; 1.562      ;
; 1.104 ; MUX:mux|out1[0]~_Duplicate_1 ; MUX:mux|out1[0]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.316      ; 1.463      ;
; 1.114 ; MUX:mux|out0[3]~_Duplicate_1 ; ULA:ula|saidaULA[3]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.428      ; 1.694      ;
; 1.115 ; MUX:mux|out2[4]              ; MUX:mux|choiceOut[4]         ; KEY[0]       ; KEY[0]      ; 0.000        ; -0.106     ; 1.161      ;
; 1.118 ; MUX:mux|out1[7]~_Duplicate_1 ; MUX:mux|out1[7]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.270      ;
; 1.120 ; MUX:mux|out0[5]~_Duplicate_1 ; ULA:ula|saidaULA[5]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.291      ; 1.563      ;
; 1.120 ; MUX:mux|out0[4]~_Duplicate_1 ; ULA:ula|saidaULA[4]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.306      ; 1.578      ;
; 1.123 ; MUX:mux|out0[7]~_Duplicate_1 ; MUX:mux|out0[7]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.275      ;
; 1.139 ; MUX:mux|out1[4]~_Duplicate_1 ; MUX:mux|out1[4]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.291      ;
; 1.139 ; MUX:mux|out0[0]~_Duplicate_1 ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.431      ; 1.722      ;
; 1.154 ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[5]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.189      ; 1.495      ;
; 1.154 ; MUX:mux|out1[3]~_Duplicate_1 ; ULA:ula|saidaULA[3]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.322      ; 1.628      ;
; 1.160 ; MUX:mux|out0[4]~_Duplicate_1 ; MUX:mux|out0[4]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.301      ; 1.504      ;
; 1.163 ; MUX:mux|out0[5]~_Duplicate_1 ; MUX:mux|out0[5]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.301      ; 1.507      ;
; 1.165 ; MUX:mux|out1[1]~_Duplicate_1 ; ULA:ula|saidaULA[1]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.261      ; 1.578      ;
; 1.190 ; MUX:mux|out1[5]~_Duplicate_1 ; ULA:ula|saidaULA[0]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.157      ; 1.499      ;
; 1.200 ; MUX:mux|out1[3]~_Duplicate_1 ; MUX:mux|out1[3]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.352      ;
; 1.207 ; MUX:mux|out0[1]~_Duplicate_1 ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.431      ; 1.790      ;
; 1.209 ; MUX:mux|out0[6]~_Duplicate_1 ; ULA:ula|saidaULA[6]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.306      ; 1.667      ;
; 1.211 ; MUX:mux|out0[2]~_Duplicate_1 ; MUX:mux|out0[2]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.303      ; 1.557      ;
; 1.240 ; MUX:mux|out1[7]~_Duplicate_1 ; ULA:ula|saidaULA[2]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.208      ; 1.600      ;
; 1.260 ; MUX:mux|out1[5]~_Duplicate_1 ; MUX:mux|out1[5]~_Duplicate_1 ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.000      ; 1.412      ;
; 1.260 ; MUX:mux|out0[0]~_Duplicate_1 ; ULA:ula|saidaULA[3]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.428      ; 1.840      ;
; 1.278 ; MUX:mux|out0[7]~_Duplicate_1 ; MUX:mux|out0[7]              ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.301      ; 1.622      ;
; 1.285 ; MUX:mux|out0[4]~_Duplicate_1 ; ULA:ula|saidaULA[5]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.291      ; 1.728      ;
; 1.288 ; MUX:mux|out1[7]~_Duplicate_1 ; ULA:ula|saidaULA[1]          ; KEY[0]       ; KEY[0]      ; 0.000        ; 0.159      ; 1.599      ;
+-------+------------------------------+------------------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'KEY[0]'                                                                       ;
+--------+--------------+----------------+------------------+--------+------------+------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock  ; Clock Edge ; Target                       ;
+--------+--------------+----------------+------------------+--------+------------+------------------------------+
; -1.519 ; 0.500        ; 2.019          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[0]              ;
; -1.519 ; 0.500        ; 2.019          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[0]              ;
; -1.519 ; 0.500        ; 2.019          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[1]              ;
; -1.519 ; 0.500        ; 2.019          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[1]              ;
; -1.519 ; 0.500        ; 2.019          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[2]              ;
; -1.519 ; 0.500        ; 2.019          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[2]              ;
; -1.519 ; 0.500        ; 2.019          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[3]              ;
; -1.519 ; 0.500        ; 2.019          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[3]              ;
; -1.519 ; 0.500        ; 2.019          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[4]              ;
; -1.519 ; 0.500        ; 2.019          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[4]              ;
; -1.519 ; 0.500        ; 2.019          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[5]              ;
; -1.519 ; 0.500        ; 2.019          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[5]              ;
; -1.519 ; 0.500        ; 2.019          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[6]              ;
; -1.519 ; 0.500        ; 2.019          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[6]              ;
; -1.519 ; 0.500        ; 2.019          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[7]              ;
; -1.519 ; 0.500        ; 2.019          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[7]              ;
; -1.519 ; 0.500        ; 2.019          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[0]              ;
; -1.519 ; 0.500        ; 2.019          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[0]              ;
; -1.519 ; 0.500        ; 2.019          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[1]              ;
; -1.519 ; 0.500        ; 2.019          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[1]              ;
; -1.519 ; 0.500        ; 2.019          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[2]              ;
; -1.519 ; 0.500        ; 2.019          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[2]              ;
; -1.519 ; 0.500        ; 2.019          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[3]              ;
; -1.519 ; 0.500        ; 2.019          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[3]              ;
; -1.519 ; 0.500        ; 2.019          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[4]              ;
; -1.519 ; 0.500        ; 2.019          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[4]              ;
; -1.519 ; 0.500        ; 2.019          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[5]              ;
; -1.519 ; 0.500        ; 2.019          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[5]              ;
; -1.519 ; 0.500        ; 2.019          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[6]              ;
; -1.519 ; 0.500        ; 2.019          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[6]              ;
; -1.519 ; 0.500        ; 2.019          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[7]              ;
; -1.519 ; 0.500        ; 2.019          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[7]              ;
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; KEY[0] ; Rise       ; KEY[0]                       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|choiceOut[0]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|choiceOut[0]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|choiceOut[1]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|choiceOut[1]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|choiceOut[2]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|choiceOut[2]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|choiceOut[3]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|choiceOut[3]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|choiceOut[4]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|choiceOut[4]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|choiceOut[5]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|choiceOut[5]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|choiceOut[6]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|choiceOut[6]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|choiceOut[7]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|choiceOut[7]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[0]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[0]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[1]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[1]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[2]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[2]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[3]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[3]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[4]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[4]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[5]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[5]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[6]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[6]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out0[7]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out0[7]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[0]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[0]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[1]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[1]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[2]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[2]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[3]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[3]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[4]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[4]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[5]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[5]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[6]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[6]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out1[7]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out1[7]~_Duplicate_1 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out2[0]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out2[0]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out2[1]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out2[1]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out2[2]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out2[2]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out2[3]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out2[3]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out2[4]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out2[4]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out2[5]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out2[5]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out2[6]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out2[6]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; MUX:mux|out2[7]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; MUX:mux|out2[7]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; ULA:ula|saidaULA[0]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; KEY[0] ; Fall       ; ULA:ula|saidaULA[0]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; KEY[0] ; Fall       ; ULA:ula|saidaULA[1]          ;
+--------+--------------+----------------+------------------+--------+------------+------------------------------+


+---------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'CLOCK_50'                                                                    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[0]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[0]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[1]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[1]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[2]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[2]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[3]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[3]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[4]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[4]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[5]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[5]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[6]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[6]        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[7]        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; ram:RAM|dataOut[7]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50|combout          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50|combout          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; RAM|dataOut[0]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; RAM|dataOut[0]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; RAM|dataOut[1]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; RAM|dataOut[1]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; RAM|dataOut[2]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; RAM|dataOut[2]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; RAM|dataOut[3]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; RAM|dataOut[3]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; RAM|dataOut[4]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; RAM|dataOut[4]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; RAM|dataOut[5]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; RAM|dataOut[5]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; RAM|dataOut[6]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; RAM|dataOut[6]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; RAM|dataOut[7]|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; RAM|dataOut[7]|clk        ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; KEY[*]    ; KEY[0]     ; 4.178 ; 4.178 ; Fall       ; KEY[0]          ;
;  KEY[1]   ; KEY[0]     ; 2.691 ; 2.691 ; Fall       ; KEY[0]          ;
;  KEY[2]   ; KEY[0]     ; 4.178 ; 4.178 ; Fall       ; KEY[0]          ;
; SW[*]     ; KEY[0]     ; 2.479 ; 2.479 ; Fall       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; 0.943 ; 0.943 ; Fall       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; 1.320 ; 1.320 ; Fall       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; 0.752 ; 0.752 ; Fall       ; KEY[0]          ;
;  SW[3]    ; KEY[0]     ; 1.057 ; 1.057 ; Fall       ; KEY[0]          ;
;  SW[4]    ; KEY[0]     ; 1.336 ; 1.336 ; Fall       ; KEY[0]          ;
;  SW[5]    ; KEY[0]     ; 1.356 ; 1.356 ; Fall       ; KEY[0]          ;
;  SW[6]    ; KEY[0]     ; 1.054 ; 1.054 ; Fall       ; KEY[0]          ;
;  SW[7]    ; KEY[0]     ; 1.192 ; 1.192 ; Fall       ; KEY[0]          ;
;  SW[8]    ; KEY[0]     ; 2.479 ; 2.479 ; Fall       ; KEY[0]          ;
;  SW[9]    ; KEY[0]     ; 2.409 ; 2.409 ; Fall       ; KEY[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; KEY[*]    ; KEY[0]     ; -2.193 ; -2.193 ; Fall       ; KEY[0]          ;
;  KEY[1]   ; KEY[0]     ; -2.193 ; -2.193 ; Fall       ; KEY[0]          ;
;  KEY[2]   ; KEY[0]     ; -2.412 ; -2.412 ; Fall       ; KEY[0]          ;
; SW[*]     ; KEY[0]     ; 0.314  ; 0.314  ; Fall       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; 0.307  ; 0.307  ; Fall       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; 0.187  ; 0.187  ; Fall       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; 0.314  ; 0.314  ; Fall       ; KEY[0]          ;
;  SW[3]    ; KEY[0]     ; -0.246 ; -0.246 ; Fall       ; KEY[0]          ;
;  SW[4]    ; KEY[0]     ; -0.491 ; -0.491 ; Fall       ; KEY[0]          ;
;  SW[5]    ; KEY[0]     ; -0.577 ; -0.577 ; Fall       ; KEY[0]          ;
;  SW[6]    ; KEY[0]     ; -0.373 ; -0.373 ; Fall       ; KEY[0]          ;
;  SW[7]    ; KEY[0]     ; -0.514 ; -0.514 ; Fall       ; KEY[0]          ;
;  SW[8]    ; KEY[0]     ; -0.299 ; -0.299 ; Fall       ; KEY[0]          ;
;  SW[9]    ; KEY[0]     ; -0.355 ; -0.355 ; Fall       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Clock to Output Times                                                 ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; LEDR[*]   ; CLOCK_50   ; 3.829 ; 3.829 ; Rise       ; CLOCK_50        ;
;  LEDR[0]  ; CLOCK_50   ; 3.721 ; 3.721 ; Rise       ; CLOCK_50        ;
;  LEDR[1]  ; CLOCK_50   ; 3.724 ; 3.724 ; Rise       ; CLOCK_50        ;
;  LEDR[2]  ; CLOCK_50   ; 3.735 ; 3.735 ; Rise       ; CLOCK_50        ;
;  LEDR[3]  ; CLOCK_50   ; 3.734 ; 3.734 ; Rise       ; CLOCK_50        ;
;  LEDR[4]  ; CLOCK_50   ; 3.829 ; 3.829 ; Rise       ; CLOCK_50        ;
;  LEDR[5]  ; CLOCK_50   ; 3.748 ; 3.748 ; Rise       ; CLOCK_50        ;
;  LEDR[6]  ; CLOCK_50   ; 3.722 ; 3.722 ; Rise       ; CLOCK_50        ;
;  LEDR[7]  ; CLOCK_50   ; 3.829 ; 3.829 ; Rise       ; CLOCK_50        ;
; LEDG[*]   ; KEY[0]     ; 3.319 ; 3.319 ; Fall       ; KEY[0]          ;
;  LEDG[0]  ; KEY[0]     ; 3.092 ; 3.092 ; Fall       ; KEY[0]          ;
;  LEDG[1]  ; KEY[0]     ; 3.095 ; 3.095 ; Fall       ; KEY[0]          ;
;  LEDG[2]  ; KEY[0]     ; 3.287 ; 3.287 ; Fall       ; KEY[0]          ;
;  LEDG[3]  ; KEY[0]     ; 3.319 ; 3.319 ; Fall       ; KEY[0]          ;
;  LEDG[4]  ; KEY[0]     ; 3.231 ; 3.231 ; Fall       ; KEY[0]          ;
;  LEDG[5]  ; KEY[0]     ; 3.265 ; 3.265 ; Fall       ; KEY[0]          ;
;  LEDG[6]  ; KEY[0]     ; 3.108 ; 3.108 ; Fall       ; KEY[0]          ;
;  LEDG[7]  ; KEY[0]     ; 3.136 ; 3.136 ; Fall       ; KEY[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-----------------------------------------------------------------------+
; Minimum Clock to Output Times                                         ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; LEDR[*]   ; CLOCK_50   ; 3.721 ; 3.721 ; Rise       ; CLOCK_50        ;
;  LEDR[0]  ; CLOCK_50   ; 3.721 ; 3.721 ; Rise       ; CLOCK_50        ;
;  LEDR[1]  ; CLOCK_50   ; 3.724 ; 3.724 ; Rise       ; CLOCK_50        ;
;  LEDR[2]  ; CLOCK_50   ; 3.735 ; 3.735 ; Rise       ; CLOCK_50        ;
;  LEDR[3]  ; CLOCK_50   ; 3.734 ; 3.734 ; Rise       ; CLOCK_50        ;
;  LEDR[4]  ; CLOCK_50   ; 3.829 ; 3.829 ; Rise       ; CLOCK_50        ;
;  LEDR[5]  ; CLOCK_50   ; 3.748 ; 3.748 ; Rise       ; CLOCK_50        ;
;  LEDR[6]  ; CLOCK_50   ; 3.722 ; 3.722 ; Rise       ; CLOCK_50        ;
;  LEDR[7]  ; CLOCK_50   ; 3.829 ; 3.829 ; Rise       ; CLOCK_50        ;
; LEDG[*]   ; KEY[0]     ; 3.092 ; 3.092 ; Fall       ; KEY[0]          ;
;  LEDG[0]  ; KEY[0]     ; 3.092 ; 3.092 ; Fall       ; KEY[0]          ;
;  LEDG[1]  ; KEY[0]     ; 3.095 ; 3.095 ; Fall       ; KEY[0]          ;
;  LEDG[2]  ; KEY[0]     ; 3.287 ; 3.287 ; Fall       ; KEY[0]          ;
;  LEDG[3]  ; KEY[0]     ; 3.319 ; 3.319 ; Fall       ; KEY[0]          ;
;  LEDG[4]  ; KEY[0]     ; 3.231 ; 3.231 ; Fall       ; KEY[0]          ;
;  LEDG[5]  ; KEY[0]     ; 3.265 ; 3.265 ; Fall       ; KEY[0]          ;
;  LEDG[6]  ; KEY[0]     ; 3.108 ; 3.108 ; Fall       ; KEY[0]          ;
;  LEDG[7]  ; KEY[0]     ; 3.136 ; 3.136 ; Fall       ; KEY[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                            ;
+------------------+----------+-------+----------+---------+---------------------+
; Clock            ; Setup    ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+----------+-------+----------+---------+---------------------+
; Worst-case Slack ; -15.713  ; 0.215 ; N/A      ; N/A     ; -1.807              ;
;  CLOCK_50        ; N/A      ; N/A   ; N/A      ; N/A     ; -1.631              ;
;  KEY[0]          ; -15.713  ; 0.215 ; N/A      ; N/A     ; -1.807              ;
; Design-wide TNS  ; -190.303 ; 0.0   ; 0.0      ; 0.0     ; -119.58             ;
;  CLOCK_50        ; N/A      ; N/A   ; N/A      ; N/A     ; -11.407             ;
;  KEY[0]          ; -190.303 ; 0.000 ; N/A      ; N/A     ; -108.173            ;
+------------------+----------+-------+----------+---------+---------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; KEY[*]    ; KEY[0]     ; 9.173 ; 9.173 ; Fall       ; KEY[0]          ;
;  KEY[1]   ; KEY[0]     ; 5.120 ; 5.120 ; Fall       ; KEY[0]          ;
;  KEY[2]   ; KEY[0]     ; 9.173 ; 9.173 ; Fall       ; KEY[0]          ;
; SW[*]     ; KEY[0]     ; 6.652 ; 6.652 ; Fall       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; 2.992 ; 2.992 ; Fall       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; 3.890 ; 3.890 ; Fall       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; 2.615 ; 2.615 ; Fall       ; KEY[0]          ;
;  SW[3]    ; KEY[0]     ; 3.169 ; 3.169 ; Fall       ; KEY[0]          ;
;  SW[4]    ; KEY[0]     ; 3.879 ; 3.879 ; Fall       ; KEY[0]          ;
;  SW[5]    ; KEY[0]     ; 3.830 ; 3.830 ; Fall       ; KEY[0]          ;
;  SW[6]    ; KEY[0]     ; 3.120 ; 3.120 ; Fall       ; KEY[0]          ;
;  SW[7]    ; KEY[0]     ; 3.383 ; 3.383 ; Fall       ; KEY[0]          ;
;  SW[8]    ; KEY[0]     ; 6.652 ; 6.652 ; Fall       ; KEY[0]          ;
;  SW[9]    ; KEY[0]     ; 6.371 ; 6.371 ; Fall       ; KEY[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; KEY[*]    ; KEY[0]     ; -2.193 ; -2.193 ; Fall       ; KEY[0]          ;
;  KEY[1]   ; KEY[0]     ; -2.193 ; -2.193 ; Fall       ; KEY[0]          ;
;  KEY[2]   ; KEY[0]     ; -2.412 ; -2.412 ; Fall       ; KEY[0]          ;
; SW[*]     ; KEY[0]     ; 0.439  ; 0.439  ; Fall       ; KEY[0]          ;
;  SW[0]    ; KEY[0]     ; 0.409  ; 0.409  ; Fall       ; KEY[0]          ;
;  SW[1]    ; KEY[0]     ; 0.187  ; 0.187  ; Fall       ; KEY[0]          ;
;  SW[2]    ; KEY[0]     ; 0.439  ; 0.439  ; Fall       ; KEY[0]          ;
;  SW[3]    ; KEY[0]     ; -0.246 ; -0.246 ; Fall       ; KEY[0]          ;
;  SW[4]    ; KEY[0]     ; -0.491 ; -0.491 ; Fall       ; KEY[0]          ;
;  SW[5]    ; KEY[0]     ; -0.577 ; -0.577 ; Fall       ; KEY[0]          ;
;  SW[6]    ; KEY[0]     ; -0.373 ; -0.373 ; Fall       ; KEY[0]          ;
;  SW[7]    ; KEY[0]     ; -0.514 ; -0.514 ; Fall       ; KEY[0]          ;
;  SW[8]    ; KEY[0]     ; -0.299 ; -0.299 ; Fall       ; KEY[0]          ;
;  SW[9]    ; KEY[0]     ; -0.355 ; -0.355 ; Fall       ; KEY[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Clock to Output Times                                                 ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; LEDR[*]   ; CLOCK_50   ; 7.028 ; 7.028 ; Rise       ; CLOCK_50        ;
;  LEDR[0]  ; CLOCK_50   ; 6.873 ; 6.873 ; Rise       ; CLOCK_50        ;
;  LEDR[1]  ; CLOCK_50   ; 6.893 ; 6.893 ; Rise       ; CLOCK_50        ;
;  LEDR[2]  ; CLOCK_50   ; 6.899 ; 6.899 ; Rise       ; CLOCK_50        ;
;  LEDR[3]  ; CLOCK_50   ; 6.889 ; 6.889 ; Rise       ; CLOCK_50        ;
;  LEDR[4]  ; CLOCK_50   ; 7.027 ; 7.027 ; Rise       ; CLOCK_50        ;
;  LEDR[5]  ; CLOCK_50   ; 6.920 ; 6.920 ; Rise       ; CLOCK_50        ;
;  LEDR[6]  ; CLOCK_50   ; 6.876 ; 6.876 ; Rise       ; CLOCK_50        ;
;  LEDR[7]  ; CLOCK_50   ; 7.028 ; 7.028 ; Rise       ; CLOCK_50        ;
; LEDG[*]   ; KEY[0]     ; 6.886 ; 6.886 ; Fall       ; KEY[0]          ;
;  LEDG[0]  ; KEY[0]     ; 6.295 ; 6.295 ; Fall       ; KEY[0]          ;
;  LEDG[1]  ; KEY[0]     ; 6.301 ; 6.301 ; Fall       ; KEY[0]          ;
;  LEDG[2]  ; KEY[0]     ; 6.836 ; 6.836 ; Fall       ; KEY[0]          ;
;  LEDG[3]  ; KEY[0]     ; 6.886 ; 6.886 ; Fall       ; KEY[0]          ;
;  LEDG[4]  ; KEY[0]     ; 6.638 ; 6.638 ; Fall       ; KEY[0]          ;
;  LEDG[5]  ; KEY[0]     ; 6.688 ; 6.688 ; Fall       ; KEY[0]          ;
;  LEDG[6]  ; KEY[0]     ; 6.310 ; 6.310 ; Fall       ; KEY[0]          ;
;  LEDG[7]  ; KEY[0]     ; 6.352 ; 6.352 ; Fall       ; KEY[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-----------------------------------------------------------------------+
; Minimum Clock to Output Times                                         ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; LEDR[*]   ; CLOCK_50   ; 3.721 ; 3.721 ; Rise       ; CLOCK_50        ;
;  LEDR[0]  ; CLOCK_50   ; 3.721 ; 3.721 ; Rise       ; CLOCK_50        ;
;  LEDR[1]  ; CLOCK_50   ; 3.724 ; 3.724 ; Rise       ; CLOCK_50        ;
;  LEDR[2]  ; CLOCK_50   ; 3.735 ; 3.735 ; Rise       ; CLOCK_50        ;
;  LEDR[3]  ; CLOCK_50   ; 3.734 ; 3.734 ; Rise       ; CLOCK_50        ;
;  LEDR[4]  ; CLOCK_50   ; 3.829 ; 3.829 ; Rise       ; CLOCK_50        ;
;  LEDR[5]  ; CLOCK_50   ; 3.748 ; 3.748 ; Rise       ; CLOCK_50        ;
;  LEDR[6]  ; CLOCK_50   ; 3.722 ; 3.722 ; Rise       ; CLOCK_50        ;
;  LEDR[7]  ; CLOCK_50   ; 3.829 ; 3.829 ; Rise       ; CLOCK_50        ;
; LEDG[*]   ; KEY[0]     ; 3.092 ; 3.092 ; Fall       ; KEY[0]          ;
;  LEDG[0]  ; KEY[0]     ; 3.092 ; 3.092 ; Fall       ; KEY[0]          ;
;  LEDG[1]  ; KEY[0]     ; 3.095 ; 3.095 ; Fall       ; KEY[0]          ;
;  LEDG[2]  ; KEY[0]     ; 3.287 ; 3.287 ; Fall       ; KEY[0]          ;
;  LEDG[3]  ; KEY[0]     ; 3.319 ; 3.319 ; Fall       ; KEY[0]          ;
;  LEDG[4]  ; KEY[0]     ; 3.231 ; 3.231 ; Fall       ; KEY[0]          ;
;  LEDG[5]  ; KEY[0]     ; 3.265 ; 3.265 ; Fall       ; KEY[0]          ;
;  LEDG[6]  ; KEY[0]     ; 3.108 ; 3.108 ; Fall       ; KEY[0]          ;
;  LEDG[7]  ; KEY[0]     ; 3.136 ; 3.136 ; Fall       ; KEY[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; KEY[0]     ; KEY[0]   ; 0        ; 0        ; 0        ; 1086221  ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; KEY[0]     ; KEY[0]   ; 0        ; 0        ; 0        ; 1086221  ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 12    ; 12   ;
; Unconstrained Input Port Paths  ; 200   ; 200  ;
; Unconstrained Output Ports      ; 16    ; 16   ;
; Unconstrained Output Port Paths ; 16    ; 16   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1.78 SJ Web Edition
    Info: Processing started: Tue Nov 22 17:28:30 2016
Info: Command: quartus_sta processadorSimples -c processadorSimples
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 2 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'processadorSimples.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name KEY[0] KEY[0]
    Info (332105): create_clock -period 1.000 -name CLOCK_50 CLOCK_50
Warning (332125): Found combinational loop of 330 nodes
    Warning (332126): Node "UC|Add0~12|datab"
    Warning (332126): Node "UC|Add0~12|cout"
    Warning (332126): Node "UC|Add0~14|cin"
    Warning (332126): Node "UC|Add0~14|combout"
    Warning (332126): Node "UC|Equal0~16|dataa"
    Warning (332126): Node "UC|Equal0~16|combout"
    Warning (332126): Node "UC|Equal0~19|datac"
    Warning (332126): Node "UC|Equal0~19|combout"
    Warning (332126): Node "UC|Equal0~20|datac"
    Warning (332126): Node "UC|Equal0~20|combout"
    Warning (332126): Node "UC|Add0~44|datab"
    Warning (332126): Node "UC|Add0~44|combout"
    Warning (332126): Node "UC|Equal0~12|datab"
    Warning (332126): Node "UC|Equal0~12|combout"
    Warning (332126): Node "UC|Equal0~14|dataa"
    Warning (332126): Node "UC|Equal0~14|combout"
    Warning (332126): Node "UC|Equal0~20|datad"
    Warning (332126): Node "UC|Add0~44|dataa"
    Warning (332126): Node "UC|Add0~44|cout"
    Warning (332126): Node "UC|Add0~46|cin"
    Warning (332126): Node "UC|Add0~46|combout"
    Warning (332126): Node "UC|Equal0~11|datac"
    Warning (332126): Node "UC|Equal0~11|combout"
    Warning (332126): Node "UC|Equal0~14|datad"
    Warning (332126): Node "UC|Add0~46|dataa"
    Warning (332126): Node "UC|Add0~46|cout"
    Warning (332126): Node "UC|Add0~48|cin"
    Warning (332126): Node "UC|Add0~48|cout"
    Warning (332126): Node "UC|Add0~50|cin"
    Warning (332126): Node "UC|Add0~50|combout"
    Warning (332126): Node "UC|Equal0~11|dataa"
    Warning (332126): Node "UC|Add0~50|dataa"
    Warning (332126): Node "UC|Add0~50|cout"
    Warning (332126): Node "UC|Add0~52|cin"
    Warning (332126): Node "UC|Add0~52|cout"
    Warning (332126): Node "UC|Add0~54|cin"
    Warning (332126): Node "UC|Add0~54|combout"
    Warning (332126): Node "UC|Equal0~10|datab"
    Warning (332126): Node "UC|Equal0~10|combout"
    Warning (332126): Node "UC|Equal0~14|datab"
    Warning (332126): Node "UC|Add0~54|dataa"
    Warning (332126): Node "UC|Add0~54|cout"
    Warning (332126): Node "UC|Add0~56|cin"
    Warning (332126): Node "UC|Add0~56|combout"
    Warning (332126): Node "UC|Equal0~10|datac"
    Warning (332126): Node "UC|Add0~56|datab"
    Warning (332126): Node "UC|Add0~56|cout"
    Warning (332126): Node "UC|Add0~58|cin"
    Warning (332126): Node "UC|Add0~58|cout"
    Warning (332126): Node "UC|Add0~60|cin"
    Warning (332126): Node "UC|Add0~60|cout"
    Warning (332126): Node "UC|Add0~62|cin"
    Warning (332126): Node "UC|Add0~62|combout"
    Warning (332126): Node "UC|Equal0~8|datac"
    Warning (332126): Node "UC|Equal0~8|combout"
    Warning (332126): Node "UC|Equal0~9|datad"
    Warning (332126): Node "UC|Equal0~9|combout"
    Warning (332126): Node "UC|Equal0~20|datab"
    Warning (332126): Node "UC|Add0~62|datab"
    Warning (332126): Node "UC|Add0~62|cout"
    Warning (332126): Node "UC|Add0~64|cin"
    Warning (332126): Node "UC|Add0~64|cout"
    Warning (332126): Node "UC|Add0~66|cin"
    Warning (332126): Node "UC|Add0~66|combout"
    Warning (332126): Node "UC|Equal0~8|dataa"
    Warning (332126): Node "UC|Add0~66|datab"
    Warning (332126): Node "UC|Add0~66|cout"
    Warning (332126): Node "UC|Add0~68|cin"
    Warning (332126): Node "UC|Add0~68|cout"
    Warning (332126): Node "UC|Add0~70|cin"
    Warning (332126): Node "UC|Add0~70|combout"
    Warning (332126): Node "UC|Equal0~7|dataa"
    Warning (332126): Node "UC|Equal0~7|combout"
    Warning (332126): Node "UC|Equal0~9|datac"
    Warning (332126): Node "UC|Add0~70|datab"
    Warning (332126): Node "UC|Add0~70|cout"
    Warning (332126): Node "UC|Add0~72|cin"
    Warning (332126): Node "UC|Add0~72|combout"
    Warning (332126): Node "UC|Equal0~7|datac"
    Warning (332126): Node "UC|Add0~72|dataa"
    Warning (332126): Node "UC|Add0~72|cout"
    Warning (332126): Node "UC|Add0~74|cin"
    Warning (332126): Node "UC|Add0~74|combout"
    Warning (332126): Node "UC|Equal0~7|datab"
    Warning (332126): Node "UC|Add0~74|dataa"
    Warning (332126): Node "UC|Add0~74|cout"
    Warning (332126): Node "UC|Add0~76|cin"
    Warning (332126): Node "UC|Add0~76|cout"
    Warning (332126): Node "UC|Add0~78|cin"
    Warning (332126): Node "UC|Add0~78|combout"
    Warning (332126): Node "UC|Equal0~6|datac"
    Warning (332126): Node "UC|Equal0~6|combout"
    Warning (332126): Node "UC|Equal0~9|datab"
    Warning (332126): Node "UC|Add0~78|dataa"
    Warning (332126): Node "UC|Add0~78|cout"
    Warning (332126): Node "UC|Add0~80|cin"
    Warning (332126): Node "UC|Add0~80|cout"
    Warning (332126): Node "UC|Add0~82|cin"
    Warning (332126): Node "UC|Add0~82|cout"
    Warning (332126): Node "UC|Add0~84|cin"
    Warning (332126): Node "UC|Add0~84|cout"
    Warning (332126): Node "UC|Add0~86|cin"
    Warning (332126): Node "UC|Add0~86|cout"
    Warning (332126): Node "UC|Add0~88|cin"
    Warning (332126): Node "UC|Add0~88|cout"
    Warning (332126): Node "UC|Add0~90|cin"
    Warning (332126): Node "UC|Add0~90|combout"
    Warning (332126): Node "UC|Equal0~5|dataa"
    Warning (332126): Node "UC|Equal0~5|combout"
    Warning (332126): Node "UC|Equal0~9|dataa"
    Warning (332126): Node "UC|Add0~90|datab"
    Warning (332126): Node "UC|Add0~90|cout"
    Warning (332126): Node "UC|Add0~92|cin"
    Warning (332126): Node "UC|Add0~92|cout"
    Warning (332126): Node "UC|Add0~94|cin"
    Warning (332126): Node "UC|Add0~94|combout"
    Warning (332126): Node "UC|Equal0~3|datac"
    Warning (332126): Node "UC|Equal0~3|combout"
    Warning (332126): Node "UC|Equal0~4|datab"
    Warning (332126): Node "UC|Equal0~4|combout"
    Warning (332126): Node "UC|Equal0~20|dataa"
    Warning (332126): Node "UC|Add0~94|datab"
    Warning (332126): Node "UC|Add0~94|cout"
    Warning (332126): Node "UC|Add0~96|cin"
    Warning (332126): Node "UC|Add0~96|combout"
    Warning (332126): Node "UC|Equal0~3|dataa"
    Warning (332126): Node "UC|Add0~96|datab"
    Warning (332126): Node "UC|Add0~96|cout"
    Warning (332126): Node "UC|Add0~98|cin"
    Warning (332126): Node "UC|Add0~98|combout"
    Warning (332126): Node "UC|Equal0~3|datad"
    Warning (332126): Node "UC|Add0~98|datab"
    Warning (332126): Node "UC|Add0~98|cout"
    Warning (332126): Node "UC|Add0~100|cin"
    Warning (332126): Node "UC|Add0~100|combout"
    Warning (332126): Node "UC|Equal0~3|datab"
    Warning (332126): Node "UC|Add0~100|dataa"
    Warning (332126): Node "UC|Add0~100|cout"
    Warning (332126): Node "UC|Add0~102|cin"
    Warning (332126): Node "UC|Add0~102|combout"
    Warning (332126): Node "UC|Equal0~2|datac"
    Warning (332126): Node "UC|Equal0~2|combout"
    Warning (332126): Node "UC|Equal0~4|dataa"
    Warning (332126): Node "UC|Add0~102|datab"
    Warning (332126): Node "UC|Add0~102|cout"
    Warning (332126): Node "UC|Add0~104|cin"
    Warning (332126): Node "UC|Add0~104|combout"
    Warning (332126): Node "UC|Equal0~2|dataa"
    Warning (332126): Node "UC|Add0~104|dataa"
    Warning (332126): Node "UC|Add0~104|cout"
    Warning (332126): Node "UC|Add0~106|cin"
    Warning (332126): Node "UC|Add0~106|combout"
    Warning (332126): Node "UC|Equal0~2|datad"
    Warning (332126): Node "UC|Add0~106|dataa"
    Warning (332126): Node "UC|Add0~106|cout"
    Warning (332126): Node "UC|Add0~108|cin"
    Warning (332126): Node "UC|Add0~108|combout"
    Warning (332126): Node "UC|Equal0~2|datab"
    Warning (332126): Node "UC|Add0~108|datab"
    Warning (332126): Node "UC|Add0~108|cout"
    Warning (332126): Node "UC|Add0~110|cin"
    Warning (332126): Node "UC|Add0~110|combout"
    Warning (332126): Node "UC|Equal0~1|datac"
    Warning (332126): Node "UC|Equal0~1|combout"
    Warning (332126): Node "UC|Equal0~4|datac"
    Warning (332126): Node "UC|Add0~110|dataa"
    Warning (332126): Node "UC|Add0~110|cout"
    Warning (332126): Node "UC|Add0~112|cin"
    Warning (332126): Node "UC|Add0~112|combout"
    Warning (332126): Node "UC|Equal0~1|datad"
    Warning (332126): Node "UC|Add0~112|datab"
    Warning (332126): Node "UC|Add0~112|cout"
    Warning (332126): Node "UC|Add0~114|cin"
    Warning (332126): Node "UC|Add0~114|combout"
    Warning (332126): Node "UC|Equal0~1|datab"
    Warning (332126): Node "UC|Add0~114|dataa"
    Warning (332126): Node "UC|Add0~114|cout"
    Warning (332126): Node "UC|Add0~116|cin"
    Warning (332126): Node "UC|Add0~116|combout"
    Warning (332126): Node "UC|Equal0~1|dataa"
    Warning (332126): Node "UC|Add0~116|datab"
    Warning (332126): Node "UC|Add0~116|cout"
    Warning (332126): Node "UC|Add0~118|cin"
    Warning (332126): Node "UC|Add0~118|cout"
    Warning (332126): Node "UC|Add0~120|cin"
    Warning (332126): Node "UC|Add0~120|cout"
    Warning (332126): Node "UC|Add0~122|cin"
    Warning (332126): Node "UC|Add0~122|cout"
    Warning (332126): Node "UC|Add0~124|cin"
    Warning (332126): Node "UC|Add0~124|combout"
    Warning (332126): Node "UC|Add0~124|datad"
    Warning (332126): Node "UC|Equal0~0|dataa"
    Warning (332126): Node "UC|Equal0~0|combout"
    Warning (332126): Node "UC|Equal0~4|datad"
    Warning (332126): Node "UC|Add0~122|combout"
    Warning (332126): Node "UC|Add0~122|datab"
    Warning (332126): Node "UC|Equal0~0|datab"
    Warning (332126): Node "UC|Add0~120|combout"
    Warning (332126): Node "UC|Add0~120|datab"
    Warning (332126): Node "UC|Equal0~0|datac"
    Warning (332126): Node "UC|Add0~118|combout"
    Warning (332126): Node "UC|Add0~118|dataa"
    Warning (332126): Node "UC|Equal0~0|datad"
    Warning (332126): Node "UC|Add0~92|combout"
    Warning (332126): Node "UC|Add0~92|datab"
    Warning (332126): Node "UC|Equal0~5|datab"
    Warning (332126): Node "UC|Add0~88|combout"
    Warning (332126): Node "UC|Add0~88|datab"
    Warning (332126): Node "UC|Equal0~5|datac"
    Warning (332126): Node "UC|Add0~86|combout"
    Warning (332126): Node "UC|Add0~86|dataa"
    Warning (332126): Node "UC|Equal0~5|datad"
    Warning (332126): Node "UC|Add0~84|combout"
    Warning (332126): Node "UC|Add0~84|datab"
    Warning (332126): Node "UC|Equal0~6|dataa"
    Warning (332126): Node "UC|Add0~82|combout"
    Warning (332126): Node "UC|Add0~82|dataa"
    Warning (332126): Node "UC|Equal0~6|datab"
    Warning (332126): Node "UC|Add0~80|combout"
    Warning (332126): Node "UC|Add0~80|datab"
    Warning (332126): Node "UC|Equal0~6|datad"
    Warning (332126): Node "UC|Add0~76|combout"
    Warning (332126): Node "UC|Add0~76|datab"
    Warning (332126): Node "UC|Equal0~7|datad"
    Warning (332126): Node "UC|Add0~68|combout"
    Warning (332126): Node "UC|Add0~68|dataa"
    Warning (332126): Node "UC|Equal0~8|datab"
    Warning (332126): Node "UC|Add0~64|combout"
    Warning (332126): Node "UC|Add0~64|datab"
    Warning (332126): Node "UC|Equal0~8|datad"
    Warning (332126): Node "UC|Add0~60|combout"
    Warning (332126): Node "UC|Add0~60|datab"
    Warning (332126): Node "UC|Equal0~10|dataa"
    Warning (332126): Node "UC|Add0~58|combout"
    Warning (332126): Node "UC|Add0~58|datab"
    Warning (332126): Node "UC|Equal0~10|datad"
    Warning (332126): Node "UC|Add0~52|combout"
    Warning (332126): Node "UC|Add0~52|datab"
    Warning (332126): Node "UC|Equal0~11|datab"
    Warning (332126): Node "UC|Add0~48|combout"
    Warning (332126): Node "UC|Add0~48|datab"
    Warning (332126): Node "UC|Equal0~11|datad"
    Warning (332126): Node "UC|Add0~38|datab"
    Warning (332126): Node "UC|Add0~38|combout"
    Warning (332126): Node "UC|Equal0~12|datac"
    Warning (332126): Node "UC|Add0~38|dataa"
    Warning (332126): Node "UC|Add0~38|cout"
    Warning (332126): Node "UC|Add0~40|cin"
    Warning (332126): Node "UC|Add0~40|combout"
    Warning (332126): Node "UC|Equal0~12|dataa"
    Warning (332126): Node "UC|Add0~40|dataa"
    Warning (332126): Node "UC|Add0~40|cout"
    Warning (332126): Node "UC|Add0~42|cin"
    Warning (332126): Node "UC|Add0~42|combout"
    Warning (332126): Node "UC|Equal0~12|datad"
    Warning (332126): Node "UC|Add0~42|dataa"
    Warning (332126): Node "UC|Add0~42|cout"
    Warning (332126): Node "UC|Add0~44|cin"
    Warning (332126): Node "UC|Add0~36|datab"
    Warning (332126): Node "UC|Add0~36|combout"
    Warning (332126): Node "UC|Equal0~13|datab"
    Warning (332126): Node "UC|Equal0~13|combout"
    Warning (332126): Node "UC|Equal0~14|datac"
    Warning (332126): Node "UC|Add0~36|dataa"
    Warning (332126): Node "UC|Add0~36|cout"
    Warning (332126): Node "UC|Add0~38|cin"
    Warning (332126): Node "UC|Add0~28|dataa"
    Warning (332126): Node "UC|Add0~28|cout"
    Warning (332126): Node "UC|Add0~30|cin"
    Warning (332126): Node "UC|Add0~30|combout"
    Warning (332126): Node "UC|Equal0~13|datac"
    Warning (332126): Node "UC|Add0~30|datab"
    Warning (332126): Node "UC|Add0~30|cout"
    Warning (332126): Node "UC|Add0~32|cin"
    Warning (332126): Node "UC|Add0~32|combout"
    Warning (332126): Node "UC|Equal0~13|dataa"
    Warning (332126): Node "UC|Add0~32|datab"
    Warning (332126): Node "UC|Add0~32|cout"
    Warning (332126): Node "UC|Add0~34|cin"
    Warning (332126): Node "UC|Add0~34|combout"
    Warning (332126): Node "UC|Equal0~13|datad"
    Warning (332126): Node "UC|Add0~34|datab"
    Warning (332126): Node "UC|Add0~34|cout"
    Warning (332126): Node "UC|Add0~36|cin"
    Warning (332126): Node "UC|Add0~28|combout"
    Warning (332126): Node "UC|Equal0~15|dataa"
    Warning (332126): Node "UC|Equal0~15|combout"
    Warning (332126): Node "UC|Equal0~19|datab"
    Warning (332126): Node "UC|Add0~28|datab"
    Warning (332126): Node "UC|Add0~22|dataa"
    Warning (332126): Node "UC|Add0~22|cout"
    Warning (332126): Node "UC|Add0~24|cin"
    Warning (332126): Node "UC|Add0~24|combout"
    Warning (332126): Node "UC|Equal0~15|datac"
    Warning (332126): Node "UC|Add0~24|datab"
    Warning (332126): Node "UC|Add0~24|cout"
    Warning (332126): Node "UC|Add0~26|cin"
    Warning (332126): Node "UC|Add0~26|combout"
    Warning (332126): Node "UC|Equal0~15|datab"
    Warning (332126): Node "UC|Add0~26|datab"
    Warning (332126): Node "UC|Add0~26|cout"
    Warning (332126): Node "UC|Add0~28|cin"
    Warning (332126): Node "UC|Add0~22|combout"
    Warning (332126): Node "UC|Equal0~15|datad"
    Warning (332126): Node "UC|Add0~22|datab"
    Warning (332126): Node "UC|Add0~18|datab"
    Warning (332126): Node "UC|Add0~18|combout"
    Warning (332126): Node "UC|Equal0~16|datac"
    Warning (332126): Node "UC|Add0~18|dataa"
    Warning (332126): Node "UC|Add0~18|cout"
    Warning (332126): Node "UC|Add0~20|cin"
    Warning (332126): Node "UC|Add0~20|combout"
    Warning (332126): Node "UC|Equal0~16|datab"
    Warning (332126): Node "UC|Add0~20|datab"
    Warning (332126): Node "UC|Add0~20|cout"
    Warning (332126): Node "UC|Add0~22|cin"
    Warning (332126): Node "UC|Add0~16|dataa"
    Warning (332126): Node "UC|Add0~16|cout"
    Warning (332126): Node "UC|Add0~18|cin"
    Warning (332126): Node "UC|Add0~16|combout"
    Warning (332126): Node "UC|Equal0~16|datad"
    Warning (332126): Node "UC|Add0~16|datab"
    Warning (332126): Node "UC|Add0~12|dataa"
    Warning (332126): Node "UC|Add0~12|combout"
    Warning (332126): Node "UC|Equal0~17|datad"
    Warning (332126): Node "UC|Equal0~17|combout"
    Warning (332126): Node "UC|Equal0~19|datad"
    Warning (332126): Node "UC|Add0~14|dataa"
    Warning (332126): Node "UC|Add0~14|cout"
    Warning (332126): Node "UC|Add0~16|cin"
Critical Warning (332081): Design contains combinational loop of 330 nodes. Estimating the delays through the loop.
Warning (332125): Found combinational loop of 2 nodes
    Warning (332126): Node "UC|Add0~10|dataa"
    Warning (332126): Node "UC|Add0~10|combout"
Warning (332125): Found combinational loop of 2 nodes
    Warning (332126): Node "UC|Add0~8|dataa"
    Warning (332126): Node "UC|Add0~8|combout"
Warning (332125): Found combinational loop of 2 nodes
    Warning (332126): Node "UC|Add0~6|datab"
    Warning (332126): Node "UC|Add0~6|combout"
Warning (332125): Found combinational loop of 2 nodes
    Warning (332126): Node "UC|Add0~4|dataa"
    Warning (332126): Node "UC|Add0~4|combout"
Warning (332125): Found combinational loop of 2 nodes
    Warning (332126): Node "UC|Add0~2|datab"
    Warning (332126): Node "UC|Add0~2|combout"
Warning (332125): Found combinational loop of 2 nodes
    Warning (332126): Node "UC|Add0~0|dataa"
    Warning (332126): Node "UC|Add0~0|combout"
Warning (332125): Found combinational loop of 2 nodes
    Warning (332126): Node "UC|count[0]~64|combout"
    Warning (332126): Node "UC|count[0]~64|datac"
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -15.713
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):   -15.713      -190.303 KEY[0] 
Info (332146): Worst-case hold slack is 0.445
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.445         0.000 KEY[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.807
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.807      -108.173 KEY[0] 
    Info (332119):    -1.631       -11.407 CLOCK_50 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -5.012
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -5.012       -39.308 KEY[0] 
Info (332146): Worst-case hold slack is 0.215
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.215         0.000 KEY[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.519
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.519       -89.830 KEY[0] 
    Info (332119):    -1.380        -9.380 CLOCK_50 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 358 warnings
    Info: Peak virtual memory: 612 megabytes
    Info: Processing ended: Tue Nov 22 17:28:31 2016
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


